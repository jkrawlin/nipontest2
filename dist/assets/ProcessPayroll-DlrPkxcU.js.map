{"version":3,"file":"ProcessPayroll-DlrPkxcU.js","sources":["../../node_modules/lucide-react/dist/esm/icons/calendar.js","../../node_modules/lucide-react/dist/esm/icons/check.js","../../node_modules/lucide-react/dist/esm/icons/chevron-left.js","../../node_modules/lucide-react/dist/esm/icons/chevron-right.js","../../node_modules/lucide-react/dist/esm/icons/circle-check-big.js","../../node_modules/lucide-react/dist/esm/icons/circle-plus.js","../../src/lib/payroll/validation.ts","../../src/components/features/payroll/TemporaryAttendanceImport.tsx","../../src/services/reports/payslipPdf.ts","../../src/pages/payroll/ProcessPayroll.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.441.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Calendar = createLucideIcon(\"Calendar\", [\n  [\"path\", { d: \"M8 2v4\", key: \"1cmpym\" }],\n  [\"path\", { d: \"M16 2v4\", key: \"4m81vk\" }],\n  [\"rect\", { width: \"18\", height: \"18\", x: \"3\", y: \"4\", rx: \"2\", key: \"1hopcy\" }],\n  [\"path\", { d: \"M3 10h18\", key: \"8toen8\" }]\n]);\n\nexport { Calendar as default };\n//# sourceMappingURL=calendar.js.map\n","/**\n * @license lucide-react v0.441.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Check = createLucideIcon(\"Check\", [[\"path\", { d: \"M20 6 9 17l-5-5\", key: \"1gmf2c\" }]]);\n\nexport { Check as default };\n//# sourceMappingURL=check.js.map\n","/**\n * @license lucide-react v0.441.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ChevronLeft = createLucideIcon(\"ChevronLeft\", [\n  [\"path\", { d: \"m15 18-6-6 6-6\", key: \"1wnfg3\" }]\n]);\n\nexport { ChevronLeft as default };\n//# sourceMappingURL=chevron-left.js.map\n","/**\n * @license lucide-react v0.441.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ChevronRight = createLucideIcon(\"ChevronRight\", [\n  [\"path\", { d: \"m9 18 6-6-6-6\", key: \"mthhwq\" }]\n]);\n\nexport { ChevronRight as default };\n//# sourceMappingURL=chevron-right.js.map\n","/**\n * @license lucide-react v0.441.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst CircleCheckBig = createLucideIcon(\"CircleCheckBig\", [\n  [\"path\", { d: \"M21.801 10A10 10 0 1 1 17 3.335\", key: \"yps3ct\" }],\n  [\"path\", { d: \"m9 11 3 3L22 4\", key: \"1pflzl\" }]\n]);\n\nexport { CircleCheckBig as default };\n//# sourceMappingURL=circle-check-big.js.map\n","/**\n * @license lucide-react v0.441.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst CirclePlus = createLucideIcon(\"CirclePlus\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"M8 12h8\", key: \"1wcyev\" }],\n  [\"path\", { d: \"M12 8v8\", key: \"napkw2\" }]\n]);\n\nexport { CirclePlus as default };\n//# sourceMappingURL=circle-plus.js.map\n","import type { PayrollBatch } from '../../types/payroll';\r\n\r\nexport interface PayrollValidationIssue {\r\n  code: string;\r\n  severity: 'info' | 'warning' | 'error';\r\n  message: string;\r\n  employeeId?: string;\r\n}\r\n\r\nexport interface PayrollValidationSummary {\r\n  batchId: string;\r\n  issues: PayrollValidationIssue[];\r\n  hasErrors: boolean;\r\n  hasWarnings: boolean;\r\n}\r\n\r\nexport function validatePayroll(batch: PayrollBatch): PayrollValidationSummary {\r\n  const issues: PayrollValidationIssue[] = [];\r\n  if (!batch.calculations || batch.calculations.length === 0) {\r\n    issues.push({ code: 'NO_CALC', severity: 'error', message: 'No salary calculations present.' });\r\n  } else {\r\n    batch.calculations.forEach(c => {\r\n      if (c.net < 0) issues.push({ code: 'NEG_NET', severity: 'error', message: `Negative net salary for ${c.employeeName}`, employeeId: c.employeeId });\r\n      if (c.overtime > c.basic * 0.5) issues.push({ code: 'HIGH_OT', severity: 'warning', message: `Overtime exceeds 50% of basic for ${c.employeeName}`, employeeId: c.employeeId });\r\n      if ((c.adjustmentsTotal||0) < 0 && Math.abs(c.adjustmentsTotal||0) > c.baseNet!) issues.push({ code: 'OVER_DEDUCT', severity: 'error', message: `Deductions exceed base net for ${c.employeeName}`, employeeId: c.employeeId });\r\n    });\r\n  }\r\n  return { batchId: batch.id!, issues, hasErrors: issues.some(i=> i.severity==='error'), hasWarnings: issues.some(i=> i.severity==='warning') };\r\n}\r\n","import React, { useState } from 'react';\r\nimport { TemporaryEmployeeService } from '../../../services/api/temporaryEmployees';\r\nimport { PayrollService } from '../../../services/api/payroll';\r\n\r\ninterface ParsedRow { employeeCode: string; date: string; hours: number; overtime: number; weekend?: boolean; holiday?: boolean; }\r\ninterface Props { batchId: string; }\r\n\r\nfunction parseCSV(text: string): { rows: ParsedRow[]; invalid: number; warnings: number } {\r\n  const lines = text.trim().split(/\\r?\\n/).filter(l=>l.trim().length>0);\r\n  if (!lines.length) return { rows: [], invalid: 0, warnings: 0 };\r\n  const [header, ...rowsRaw] = lines;\r\n  const cols = header.split(',').map(c=>c.trim().toLowerCase());\r\n  const idx = {\r\n    code: cols.indexOf('employeecode'),\r\n    date: cols.indexOf('date'),\r\n    hours: cols.indexOf('hours'),\r\n    overtime: cols.indexOf('overtime'),\r\n    weekend: cols.indexOf('weekend'),\r\n    holiday: cols.indexOf('holiday')\r\n  };\r\n  if (idx.code===-1 || idx.date===-1) return { rows: [], invalid: rowsRaw.length, warnings: 0 };\r\n  let invalid = 0; let warnings = 0;\r\n  const out: ParsedRow[] = [];\r\n  rowsRaw.forEach(r => {\r\n    const parts = r.split(',');\r\n    const employeeCode = (parts[idx.code]||'').trim();\r\n    const dateStr = (parts[idx.date]||'').trim();\r\n    const date = new Date(dateStr);\r\n    if (!employeeCode || isNaN(date.getTime())) { invalid++; return; }\r\n    const hours = parseFloat(parts[idx.hours]||'0');\r\n    const overtime = parseFloat(parts[idx.overtime]||'0');\r\n    if (hours < 0 || overtime < 0) { invalid++; return; }\r\n    const weekend = idx.weekend!==-1 ? /(y|yes|true|1)/i.test((parts[idx.weekend]||'')) : false;\r\n    const holiday = idx.holiday!==-1 ? /(y|yes|true|1)/i.test((parts[idx.holiday]||'')) : false;\r\n    if (weekend && holiday) warnings++; // conflicting flags\r\n    out.push({ employeeCode, date: date.toISOString().slice(0,10), hours, overtime, weekend, holiday });\r\n  });\r\n  return { rows: out, invalid, warnings };\r\n}\r\n\r\nfunction aggregate(rows: ParsedRow[]) {\r\n  const byEmp: Record<string,{ days:Set<string>; totalHours:number; overtime:number; weekendOT:number; holidayOT:number; }> = {};\r\n  rows.forEach(r => {\r\n    if (!byEmp[r.employeeCode]) byEmp[r.employeeCode] = { days:new Set(), totalHours:0, overtime:0, weekendOT:0, holidayOT:0 };\r\n    const bucket = byEmp[r.employeeCode];\r\n    bucket.days.add(r.date);\r\n    bucket.totalHours += r.hours;\r\n    bucket.overtime += r.overtime;\r\n    if (r.weekend) bucket.weekendOT += r.overtime; else if (r.holiday) bucket.holidayOT += r.overtime;\r\n  });\r\n  return byEmp;\r\n}\r\n\r\nexport const TemporaryAttendanceImport: React.FC<Props> = ({ batchId }) => {\r\n  const [status, setStatus] = useState<string | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [includeUnknown, setIncludeUnknown] = useState(false);\r\n\r\n  const handleFile = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setStatus(null); setError(null);\r\n    const file = e.target.files?.[0];\r\n    if (!file) return;\r\n    const text = await file.text();\r\n    const { rows, invalid, warnings } = parseCSV(text);\r\n    if (rows.length===0) { setError('No valid rows parsed. Required columns: employeeCode,date.'); return; }\r\n    const temps = TemporaryEmployeeService.getAll();\r\n    const codeSet = new Set(temps.map(t=>t.employeeCode));\r\n    const filtered = rows.filter(r => codeSet.has(r.employeeCode) || includeUnknown);\r\n    const aggregated = aggregate(filtered);\r\n    let updated = 0;\r\n    temps.forEach(t => {\r\n      const agg = aggregated[t.employeeCode];\r\n      if (agg) {\r\n        t.attendance = {\r\n          totalDaysWorked: agg.days.size,\r\n          totalHoursWorked: agg.totalHours,\r\n          overtimeHours: agg.overtime\r\n        } as any;\r\n        updated++;\r\n      }\r\n    });\r\n    try { localStorage.setItem('nipon_temporary_employees', JSON.stringify(temps)); } catch {}\r\n    PayrollService.addAttendanceImportAudit(batchId, { fileName: file.name, updated, invalid, warnings });\r\n    setStatus(`Updated ${updated} temps. Invalid rows: ${invalid}${warnings ? `, warnings: ${warnings}`: ''}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"border rounded p-4 space-y-3 bg-white\">\r\n      <h3 className=\"text-sm font-semibold\">Temporary Attendance Import</h3>\r\n      <p className=\"text-xs text-gray-600\">CSV columns: employeeCode,date,hours,overtime,(optional weekend,holiday). Invalid rows skipped.</p>\r\n      <div className=\"flex items-center gap-2 text-[11px]\"><input type=\"checkbox\" id=\"includeUnknown\" checked={includeUnknown} onChange={e=> setIncludeUnknown(e.target.checked)} /><label htmlFor=\"includeUnknown\">Allow unknown employee codes (ignored for update)</label></div>\r\n      <input type=\"file\" accept=\".csv,text/csv\" onChange={handleFile} className=\"text-xs\" />\r\n      {status && <div className=\"text-xs text-green-600\">{status}</div>}\r\n      {error && <div className=\"text-xs text-red-600\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\nexport default TemporaryAttendanceImport;","import { jsPDF } from 'jspdf';\r\nimport { PayslipService } from '../api/payslips';\r\nimport { PayrollService } from '../api/payroll';\r\n\r\nexport async function generateBatchPayslipPDF(batchId: string) {\r\n  const batch = PayrollService.getById(batchId);\r\n  if (!batch) throw new Error('Batch not found');\r\n  const slips = PayslipService.list(batchId);\r\n  if (!slips.length) throw new Error('No payslips generated');\r\n  const doc = new jsPDF();\r\n  slips.forEach((p, idx) => {\r\n    if (idx>0) doc.addPage();\r\n    const isTemp = p.employeeType === 'Temporary';\r\n    doc.setFontSize(14);\r\n    doc.text(`${isTemp ? 'TEMPORARY' : 'PERMANENT'} PAYSLIP`, 14, 16);\r\n    doc.setFontSize(10);\r\n    doc.text(`Employee: ${p.employeeName} (${p.employeeId})`, 14, 26);\r\n    doc.text(`Period: ${p.period.month}/${p.period.year}`, 14, 32);\r\n    doc.text(`Type: ${p.employeeType || 'N/A'}`, 14, 38);\r\n    let y = 48;\r\n    doc.setFontSize(11);\r\n    doc.text('Earnings / Deductions', 14, y); y += 6;\r\n    doc.setFontSize(9);\r\n    const lines = p.lines.filter(l => l.amount !== 0);\r\n    lines.forEach(l => {\r\n      doc.text(l.code, 14, y);\r\n      doc.text(l.description, 30, y);\r\n      const amt = l.type === 'deduction' ? `- ${l.amount.toFixed(2)}` : l.amount.toFixed(2);\r\n      doc.text(amt, 170, y, { align: 'right' });\r\n      y += 5;\r\n      if (y > 270) { doc.addPage(); y = 20; }\r\n    });\r\n    y += 4;\r\n    doc.setFontSize(10);\r\n    doc.text(`Gross: ${p.gross.toFixed(2)}`, 14, y); y +=5;\r\n    doc.text(`Deductions: ${p.deductions.toFixed(2)}`, 14, y); y +=5;\r\n    doc.text(`Net Pay: ${p.net.toFixed(2)}`, 14, y);\r\n    if (isTemp) {\r\n      y += 8;\r\n      doc.setFontSize(8);\r\n      doc.text('Temporary payslip: consolidated earning reflects approved timesheet & allowances.', 14, y);\r\n    }\r\n  });\r\n  doc.save(`Payslips-${batch.month}-${batch.year}.pdf`);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Decimal } from 'decimal.js';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { EmployeeService } from '../../services/api/employees';\r\nimport { PayrollService } from '../../services/api/payroll';\r\nimport { formatCurrency } from '../../lib/formatters';\r\nimport type { PayrollBatch, SalaryCalculation } from '../../types/payroll';\r\nimport { Check, Calendar, Clock, Calculator, PlusCircle, CheckCircle, FileText, ChevronLeft, ChevronRight } from 'lucide-react';\r\nimport { validatePayroll } from '../../lib/payroll/validation';\r\nimport { WPSReportService } from '../../services/reports/wps';\r\nimport { PayslipService } from '../../services/api/payslips';\r\nimport { TemporaryEmployeeService } from '../../services/api/temporaryEmployees';\r\nimport { TemporaryAttendanceImport } from '../../components/features/payroll/TemporaryAttendanceImport';\r\nimport { generateBatchPayslipPDF } from '../../services/reports';\r\n\r\n// UI components (lightweight local fallbacks if not present in project structure)\r\nimport { Button } from '../../components/ui/button';\r\n// Use shared table primitives\r\nimport { Table, TableHeader, TableBody, TableRow, TableHead, TableCell } from '../../components/ui/table';\r\nconst TableFooter: React.FC<{ children: React.ReactNode }> = ({ children }) => <tfoot className=\"bg-gray-50 font-medium\">{children}</tfoot>;\r\n\r\n// Simple card shell\r\nconst Card: React.FC<{ children: React.ReactNode; className?: string }> = ({ children, className }) => <div className={`bg-white border rounded-lg shadow-sm ${className||''}`}>{children}</div>;\r\nconst CardContent: React.FC<{ children: React.ReactNode; className?: string }> = ({ children, className }) => <div className={className}>{children}</div>;\r\n\r\n// Utility class join\r\nfunction cn(...parts: Array<string | false | null | undefined>) { return parts.filter(Boolean).join(' '); }\r\n\r\ninterface StepComponentProps { onNext: (data?: any) => void; onBack?: () => void; payrollData: PayrollBatch; setPayrollData: React.Dispatch<React.SetStateAction<PayrollBatch>>; }\r\n\r\nconst PeriodSelectionStep: React.FC<StepComponentProps> = ({ onNext, payrollData, setPayrollData }) => {\r\n\treturn (\r\n\t\t<div className=\"space-y-4\">\r\n\t\t\t<h3 className=\"text-lg font-semibold\">Select Period</h3>\r\n\t\t\t<div className=\"flex gap-4\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label className=\"text-xs font-medium\">Month</label>\r\n\t\t\t\t\t<select\r\n\t\t\t\t\t\tvalue={payrollData.month}\r\n\t\t\t\t\t\tonChange={e => setPayrollData(p => ({ ...p, month: parseInt(e.target.value,10) }))}\r\n\t\t\t\t\t\tclassName=\"border rounded px-2 py-1 text-sm\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Array.from({ length: 12 }, (_, i) => i + 1).map(m => <option key={m} value={m}>{m}</option>)}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label className=\"text-xs font-medium\">Year</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tvalue={payrollData.year}\r\n\t\t\t\t\t\t\tonChange={e => setPayrollData(p => ({ ...p, year: parseInt(e.target.value,10) }))}\r\n\t\t\t\t\t\t\tclassName=\"border rounded px-2 py-1 text-sm w-28\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"pt-4 flex justify-end\">\r\n\t\t\t\t<Button onClick={() => onNext()}>Continue <ChevronRight className=\"ml-1 h-4 w-4\"/></Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst AttendanceReviewStep: React.FC<StepComponentProps> = ({ onNext, onBack, payrollData, setPayrollData }) => {\r\n\tconst [rows, setRows] = useState<Array<{ id: string; name: string; presentDays: number; absentDays: number; overtimeHours: number }>>([]);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tuseEffect(() => { (async () => {\r\n\t\tconst emps = await EmployeeService.getActiveEmployees();\r\n\t\tconst mapped = emps.map(e => ({\r\n\t\t\tid: e.id,\r\n\t\t\tname: `${e.personalInfo.firstName} ${e.personalInfo.lastName}`,\r\n\t\t\tpresentDays: payrollData.attendance?.[e.id]?.presentDays ?? 30,\r\n\t\t\tabsentDays: payrollData.attendance?.[e.id]?.absentDays ?? 0,\r\n\t\t\tovertimeHours: payrollData.attendance?.[e.id]?.overtimeHours ?? 0\r\n\t\t}));\r\n\t\tsetRows(mapped);\r\n\t\tsetLoading(false);\r\n\t})(); }, []);\r\n\r\n\tconst updateCell = (id: string, field: 'presentDays' | 'absentDays' | 'overtimeHours', value: number) => {\r\n\t\tsetRows(r => r.map(row => row.id === id ? { ...row, [field]: value } : row));\r\n\t};\r\n\r\n\tconst handleContinue = () => {\r\n\t\tconst attendance: any = {};\r\n\t\trows.forEach(r => { attendance[r.id] = { presentDays: r.presentDays, absentDays: r.absentDays, overtimeHours: r.overtimeHours }; });\r\n\t\tsetPayrollData(p => ({ ...p, attendance }));\r\n\t\tonNext({ attendance });\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"space-y-4\">\r\n\t\t\t<h3 className=\"text-lg font-semibold\">Review Attendance</h3>\r\n\t\t\t{loading ? <div className=\"text-sm text-gray-500\">Loading employees…</div> : (\r\n\t\t\t\t<div className=\"overflow-x-auto border rounded\">\r\n\t\t\t\t\t<Table>\r\n\t\t\t\t\t\t<TableHeader>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<TableHead>Employee</TableHead>\r\n\t\t\t\t\t\t\t\t<TableHead className=\"text-center\">Present Days</TableHead>\r\n\t\t\t\t\t\t\t\t<TableHead className=\"text-center\">Absent Days</TableHead>\r\n\t\t\t\t\t\t\t\t<TableHead className=\"text-center\">Overtime Hrs</TableHead>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t</TableHeader>\r\n\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t{rows.map(r => (\r\n\t\t\t\t\t\t\t\t<TableRow key={r.id}>\r\n\t\t\t\t\t\t\t\t\t<TableCell className=\"font-medium whitespace-nowrap\">{r.name}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell className=\"text-center\"><input type=\"number\" min={0} max={31} value={r.presentDays} onChange={e => updateCell(r.id,'presentDays', parseInt(e.target.value||'0',10))} className=\"w-20 border rounded px-1 py-0.5 text-sm text-center\"/></TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell className=\"text-center\"><input type=\"number\" min={0} max={31} value={r.absentDays} onChange={e => updateCell(r.id,'absentDays', parseInt(e.target.value||'0',10))} className=\"w-20 border rounded px-1 py-0.5 text-sm text-center\"/></TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell className=\"text-center\"><input type=\"number\" min={0} value={r.overtimeHours} onChange={e => updateCell(r.id,'overtimeHours', parseInt(e.target.value||'0',10))} className=\"w-24 border rounded px-1 py-0.5 text-sm text-center\"/></TableCell>\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<div className=\"space-y-4\">\r\n\t\t\t\t\t<TemporaryAttendanceImport batchId={payrollData.id!} />\r\n\t\t\t\t\t{payrollData.attendanceImportAudit && payrollData.attendanceImportAudit.length > 0 && (\r\n\t\t\t\t\t\t<div className=\"border rounded p-3 bg-gray-50\">\r\n\t\t\t\t\t\t\t<h4 className=\"text-xs font-semibold mb-1\">Attendance Imports</h4>\r\n\t\t\t\t\t\t\t<ul className=\"text-[11px] space-y-1 max-h-40 overflow-auto\">\r\n\t\t\t\t\t\t\t\t{payrollData.attendanceImportAudit.slice().reverse().map(a => (\r\n\t\t\t\t\t\t\t\t\t<li key={a.id}>{new Date(a.at).toLocaleString()} – {a.fileName || 'upload'} updated:{a.updated} invalid:{a.invalid}{a.warnings?` warn:${a.warnings}`:''}</li>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t<div className=\"flex justify-between pt-2\">\r\n\t\t\t\t<Button variant=\"outline\" onClick={onBack}><ChevronLeft className=\"mr-1 h-4 w-4\"/>Back</Button>\r\n\t\t\t\t<Button onClick={handleContinue}>Continue<ChevronRight className=\"ml-1 h-4 w-4\"/></Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\ninterface SalaryCalculationStepProps { payrollData: PayrollBatch; onNext: (data: { calculations: SalaryCalculation[] }) => void; onBack: () => void; }\r\nconst SalaryCalculationStep: React.FC<SalaryCalculationStepProps> = ({ payrollData, onNext, onBack }) => {\r\n\tconst [calculations, setCalculations] = useState<SalaryCalculation[]>([]);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [mode, setMode] = useState<'Permanent' | 'Temporary' | 'All'>(payrollData.calculationMode || 'Permanent');\r\n\tconst [otRegular, setOtRegular] = useState<number>(payrollData.overtimeConfig?.regular || 1.25);\r\n\tconst [otWeekend, setOtWeekend] = useState<number>(payrollData.overtimeConfig?.weekend || 1.5);\r\n\tconst [otHoliday, setOtHoliday] = useState<number>(payrollData.overtimeConfig?.holiday || 2);\r\n\r\n\tuseEffect(() => { void calculateSalaries(); // eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\r\n\tconst calculateSalaries = async () => {\r\n\t\tsetLoading(true);\r\n\t\tconst allEmployees = await EmployeeService.getActiveEmployees();\r\n\t\tconst permanent = allEmployees.filter(e=> e.employeeType==='Permanent');\r\n\t\t// Build a light wrapper for temporary employees using their own service for earnings\r\n\t\tconst temporaryRaw = TemporaryEmployeeService.getAll().filter(e=> e.status==='Active');\r\n\r\n\t\tconst selected: Array<any> = mode==='All' ? [...permanent, ...temporaryRaw] : mode==='Permanent' ? permanent : temporaryRaw;\r\n\r\n\t\tconst calcs: SalaryCalculation[] = selected.map(emp => {\r\n\t\t\tif (emp.employeeType === 'Permanent') {\r\n\t\t\t\tconst workingDays = payrollData.attendance?.[emp.id]?.presentDays || 30;\r\n\t\t\t\tconst dailyRate = new Decimal(emp.compensation.basicSalary).div(30);\r\n\t\t\t\tconst basic = dailyRate.mul(workingDays);\r\n\t\t\t\tconst housing = new Decimal(emp.compensation.housingAllowance || 0);\r\n\t\t\t\tconst transport = new Decimal(emp.compensation.transportAllowance || 0);\r\n\t\t\t\tconst other = new Decimal(emp.compensation.otherAllowances || 0);\r\n\t\t\t\tconst att = payrollData.attendance?.[emp.id];\r\n\t\t\t\tconst overtimeHours = att?.overtimeHours || 0;\r\n\t\t\t\tconst weekendOT = att?.weekendOvertimeHours || 0;\r\n\t\t\t\tconst holidayOT = att?.holidayOvertimeHours || 0;\r\n\t\t\t\tconst hourlyRate = dailyRate.div(8);\r\n\t\t\t\tconst overtime = hourlyRate.mul(otRegular).mul(overtimeHours)\r\n\t\t\t\t\t.plus(hourlyRate.mul(otWeekend).mul(weekendOT))\r\n\t\t\t\t\t.plus(hourlyRate.mul(otHoliday).mul(holidayOT));\r\n\t\t\t\tconst absenceDays = payrollData.attendance?.[emp.id]?.absentDays || 0;\r\n\t\t\t\tconst absenceDeduction = dailyRate.mul(absenceDays);\r\n\t\t\t\tconst unpaidLeave = new Decimal(0);\r\n\t\t\t\tconst gross = basic.plus(housing).plus(transport).plus(other).plus(overtime);\r\n\t\t\t\tconst totalDeductions = absenceDeduction.plus(unpaidLeave);\r\n\t\t\t\tconst net = gross.minus(totalDeductions);\r\n\t\t\t\treturn {\r\n\t\t\t\t\temployeeId: emp.id,\r\n\t\t\t\t\temployeeName: `${emp.personalInfo.firstName} ${emp.personalInfo.lastName}`,\r\n\t\t\t\t\temployeeType: 'Permanent' as const,\r\n\t\t\t\t\tworkingDays,\r\n\t\t\t\t\tbasic: basic.toNumber(),\r\n\t\t\t\t\thousing: housing.toNumber(),\r\n\t\t\t\t\ttransport: transport.toNumber(),\r\n\t\t\t\t\tother: other.toNumber(),\r\n\t\t\t\t\tovertime: overtime.toNumber(),\r\n\t\t\t\t\tgross: gross.toNumber(),\r\n\t\t\t\t\tdeductions: totalDeductions.toNumber(),\r\n\t\t\t\t\tnet: net.toNumber()\r\n\t\t\t\t};\r\n\t\t\t} else { // Temporary\r\n\t\t\t\t// Temporary earnings are pre-aggregated: treat entire earning as 'basic' for now + overtime embedded in their attendance logic\r\n\t\t\t\tconst earnings = TemporaryEmployeeService.calculateEarnings(emp);\r\n\t\t\t\t\t\t// Compute overtime monetary value distinctly for temporary employees\r\n\t\t\t\t\t\tconst overtimeMonetary = (() => {\r\n\t\t\t\t\t\t\tconst rt = emp.compensation.rateType;\r\n\t\t\t\t\t\t\tif (rt === 'Hourly' && emp.attendance?.overtimeHours && emp.compensation.overtimeRate) {\r\n\t\t\t\t\t\t\t\treturn emp.compensation.overtimeRate * emp.attendance.overtimeHours;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (rt === 'Daily' && emp.attendance?.overtimeHours && emp.compensation.overtimeRate) {\r\n\t\t\t\t\t\t\t\t// Assume overtime rate provided is hourly equivalent; treat daily as 8h baseline\r\n\t\t\t\t\t\t\t\treturn emp.compensation.overtimeRate * emp.attendance.overtimeHours;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn 0;\r\n\t\t\t\t\t\t})();\r\n\t\t\t\t\t\tconst baseEarnings = earnings - overtimeMonetary;\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\temployeeId: emp.id,\r\n\t\t\t\t\temployeeName: `${emp.personalInfo.firstName} ${emp.personalInfo.lastName}`,\r\n\t\t\t\t\temployeeType: 'Temporary' as const,\r\n\t\t\t\t\tworkingDays: emp.attendance?.totalDaysWorked || 0,\r\n\t\t\t\t\t\t\tbasic: baseEarnings < 0 ? earnings : baseEarnings,\r\n\t\t\t\t\thousing: 0,\r\n\t\t\t\t\ttransport: 0,\r\n\t\t\t\t\tother: 0,\r\n\t\t\t\t\t\t\tovertime: overtimeMonetary,\r\n\t\t\t\t\t\t\tgross: baseEarnings + overtimeMonetary,\r\n\t\t\t\t\tdeductions: 0,\r\n\t\t\t\t\t\t\tnet: baseEarnings + overtimeMonetary\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t});\r\n\t\tsetCalculations(calcs);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"space-y-6\">\r\n\t\t\t<div className=\"flex items-center gap-4\">\r\n\t\t\t\t<h3 className=\"text-lg font-semibold\">Salary Calculations</h3>\r\n\t\t\t\t<div className=\"text-xs flex items-center gap-1\">\r\n\t\t\t\t\t<span className=\"text-gray-500\">Mode:</span>\r\n\t\t\t\t\t<select value={mode} onChange={e=> { const m = e.target.value as any; setMode(m); PayrollService.updateCalculationMode(payrollData.id!, m); }} className=\"border rounded px-2 py-1 text-xs\">\r\n\t\t\t\t\t\t<option value=\"Permanent\">Permanent</option>\r\n\t\t\t\t\t\t<option value=\"Temporary\">Temporary</option>\r\n\t\t\t\t\t\t<option value=\"All\">All</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t<button onClick={()=> calculateSalaries()} className=\"text-blue-600 underline text-xs\">Recalculate</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"flex flex-wrap gap-4 items-end text-xs\">\r\n          <div className=\"space-y-1\">\r\n            <label className=\"block\">OT Regular x</label>\r\n            <input type=\"number\" step=\"0.01\" value={otRegular} onChange={e=> { const v= parseFloat(e.target.value)||1.25; setOtRegular(v); PayrollService.updateOvertimeConfig(payrollData.id!, { regular: v }); }} className=\"border rounded px-2 py-1 w-20\" />\r\n          </div>\r\n          <div className=\"space-y-1\">\r\n            <label className=\"block\">OT Weekend x</label>\r\n            <input type=\"number\" step=\"0.01\" value={otWeekend} onChange={e=> { const v= parseFloat(e.target.value)||1.5; setOtWeekend(v); PayrollService.updateOvertimeConfig(payrollData.id!, { weekend: v }); }} className=\"border rounded px-2 py-1 w-20\" />\r\n          </div>\r\n          <div className=\"space-y-1\">\r\n            <label className=\"block\">OT Holiday x</label>\r\n            <input type=\"number\" step=\"0.01\" value={otHoliday} onChange={e=> { const v= parseFloat(e.target.value)||2; setOtHoliday(v); PayrollService.updateOvertimeConfig(payrollData.id!, { holiday: v }); }} className=\"border rounded px-2 py-1 w-20\" />\r\n          </div>\r\n          <div className=\"space-y-1\">\r\n            <button type=\"button\" onClick={()=> calculateSalaries()} className=\"mt-4 text-blue-600 underline\">Apply OT Config</button>\r\n          </div>\r\n        </div>\r\n\t\t\t<div className=\"flex justify-between items-center\">\r\n\t\t\t\t<span className=\"text-xs bg-gray-100 px-2 py-1 rounded\">{payrollData.month}/{payrollData.year}</span>\r\n\t\t\t</div>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<div className=\"py-10 text-center text-sm text-gray-500\">Calculating…</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"overflow-x-auto border rounded\">\r\n\t\t\t\t\t<Table>\r\n\t\t\t\t\t\t<TableHeader>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<TableHead>Employee</TableHead>\r\n\t\t\t\t\t\t\t\t<TableHead className=\"text-center\">Days</TableHead>\r\n\t\t\t\t\t\t\t\t<TableHead className=\"text-right\">Basic</TableHead>\r\n\t\t\t\t\t\t\t\t<TableHead className=\"text-right\">Housing</TableHead>\r\n\t\t\t\t\t\t\t\t<TableHead className=\"text-right\">Transport</TableHead>\r\n\t\t\t\t\t\t\t\t<TableHead className=\"text-right\">Overtime</TableHead>\r\n\t\t\t\t\t\t\t\t<TableHead className=\"text-right\">Gross</TableHead>\r\n\t\t\t\t\t\t\t\t<TableHead className=\"text-right\">Deductions</TableHead>\r\n\t\t\t\t\t\t\t\t<TableHead className=\"text-right\">Net</TableHead>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t</TableHeader>\r\n\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t{calculations.map(c => (\r\n\t\t\t\t\t\t\t\t<TableRow key={c.employeeId}>\r\n\t\t\t\t\t\t\t\t\t<TableCell className=\"font-medium\">{c.employeeName}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell className=\"text-center\">{c.workingDays}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell className=\"text-right\">{formatCurrency(c.basic)}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell className=\"text-right\">{formatCurrency(c.housing)}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell className=\"text-right\">{formatCurrency(c.transport)}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell className=\"text-right\">{formatCurrency(c.overtime)}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell className=\"text-right font-medium\">{formatCurrency(c.gross)}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell className=\"text-right text-red-600\">{c.deductions>0 && '-'}{formatCurrency(c.deductions)}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell className=\"text-right font-semibold text-green-600\">{formatCurrency(c.net)}</TableCell>\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t<TableFooter>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<TableCell colSpan={8} className=\"text-right font-semibold\">Total Payroll:</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell className=\"text-right font-bold text-green-700\">\r\n\t\t\t\t\t\t\t\t\t{formatCurrency(calculations.reduce((s,c)=> s + c.net, 0))}\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t</TableFooter>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<div className=\"flex justify-between\">\r\n\t\t\t\t<Button variant=\"outline\" onClick={onBack}><ChevronLeft className=\"mr-1 h-4 w-4\"/>Back</Button>\r\n\t\t\t\t<Button onClick={() => onNext({ calculations })}>Continue<ChevronRight className=\"ml-1 h-4 w-4\"/></Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n// Adjustments Step\r\nconst adjustmentTypes = [\r\n\t{ value: 'bonus', label: 'Bonus (+)' },\r\n\t{ value: 'allowance', label: 'Allowance (+)' },\r\n\t{ value: 'overtime', label: 'Overtime (+)' },\r\n\t{ value: 'deduction', label: 'Deduction (-)' }\r\n] as const;\r\n\r\nconst AdjustmentsStep: React.FC<StepComponentProps> = ({ onNext, onBack, payrollData, setPayrollData }) => {\r\n\tconst [form, setForm] = useState({ employeeId: '', type: 'bonus', amount: '', reason: '' });\r\n\tconst [editingId, setEditingId] = useState<string | null>(null);\r\n\tconst employees = payrollData.calculations?.map(c => ({ id: c.employeeId, name: c.employeeName })) || [];\r\n\tconst adjustments = payrollData.adjustments || [];\r\n\tconst [formError, setFormError] = useState<string | null>(null);\r\n\r\n\tconst addOrUpdate = () => {\r\n\t\tsetFormError(null);\r\n\t\tif (!form.employeeId || !form.amount) { setFormError('Employee and amount required'); return; }\r\n\t\tconst amount = parseFloat(form.amount);\r\n\t\tif (isNaN(amount) || amount <= 0) { setFormError('Enter a positive amount'); return; }\r\n\t\t// Inline validation rules\r\n\t\tconst calc = payrollData.calculations?.find(c => c.employeeId === form.employeeId);\r\n\t\tif (!calc) { setFormError('Calculation missing for employee'); return; }\r\n\t\tconst baseNet = calc.baseNet ?? (calc.net - (calc.adjustmentsTotal||0));\r\n\t\t// Predict new adjustments total\r\n\t\tlet existingAdjTotal = calc.adjustmentsTotal || 0;\r\n\t\tif (editingId) {\r\n\t\t\tconst prev = adjustments.find(a => a.id === editingId);\r\n\t\t\tif (prev) existingAdjTotal -= (prev.type === 'deduction' ? -prev.amount : prev.amount);\r\n\t\t}\r\n\t\tconst delta = form.type === 'deduction' ? -amount : amount;\r\n\t\tconst projectedAdjTotal = existingAdjTotal + delta;\r\n\t\tconst projectedNet = baseNet + projectedAdjTotal;\r\n\t\tif (form.type === 'deduction' && amount > baseNet) { setFormError('Deduction exceeds base net pay'); return; }\r\n\t\tif (projectedNet < 0) { setFormError('Adjustment would result in negative net pay'); return; }\r\n\t\t// Soft warning on large bonus (>50% of base net)\r\n\t\tif ((form.type === 'bonus' || form.type === 'allowance') && amount > baseNet * 0.5) {\r\n\t\t\t// Just a warning; could convert to confirm dialog later\r\n\t\t\tconsole.warn('Large positive adjustment (>50% base net)');\r\n\t\t}\r\n\t\tif (editingId) {\r\n\t\t\tPayrollService.editAdjustment(payrollData.id!, editingId, { amount, reason: form.reason, type: form.type as any });\r\n\t\t\tsetEditingId(null);\r\n\t\t} else {\r\n\t\t\tPayrollService.addAdjustment(payrollData.id!, { employeeId: form.employeeId, type: form.type as any, amount, reason: form.reason });\r\n\t\t}\r\n\t\tsetPayrollData(p => ({ ...PayrollService.getById(p.id!)! }));\r\n\t\tsetForm(f => ({ ...f, amount: '', reason: '' }));\r\n\t};\r\n\tconst remove = (id: string) => { PayrollService.removeAdjustment(payrollData.id!, id); setPayrollData(p => ({ ...PayrollService.getById(p.id!)! })); };\r\n\tconst startEdit = (id: string) => { const adj = adjustments.find(a => a.id === id); if (!adj) return; setEditingId(id); setForm({ employeeId: adj.employeeId, type: adj.type, amount: String(adj.amount), reason: adj.reason || '' }); };\r\n\tconst cancelEdit = () => { setEditingId(null); setForm(f => ({ ...f, amount: '', reason: '' })); };\r\n\r\n\tconst perEmployee = (payrollData.calculations || []).map(c => ({ id: c.employeeId, name: c.employeeName, baseNet: c.baseNet ?? c.net - (c.adjustmentsTotal || 0), adjustments: c.adjustmentsTotal || 0, net: c.net }));\r\n\r\n\treturn (\r\n\t\t<div className=\"space-y-6\">\r\n\t\t\t<h3 className=\"text-lg font-semibold\">Adjustments</h3>\r\n\t\t\t<div className=\"grid md:grid-cols-3 gap-6\">\r\n\t\t\t\t<div className=\"md:col-span-2 space-y-4\">\r\n\t\t\t\t\t<div className=\"overflow-x-auto border rounded\">\r\n\t\t\t\t\t\t<Table>\r\n\t\t\t\t\t\t\t<TableHeader>\r\n\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t<TableHead>Employee</TableHead>\r\n\t\t\t\t\t\t\t\t\t<TableHead className=\"text-right\">Base Net</TableHead>\r\n\t\t\t\t\t\t\t\t\t<TableHead className=\"text-right\">Adj Delta</TableHead>\r\n\t\t\t\t\t\t\t\t\t<TableHead className=\"text-right\">New Net</TableHead>\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t</TableHeader>\r\n\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t\t{perEmployee.map(r => (\r\n\t\t\t\t\t\t\t\t\t<TableRow key={r.id}>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className=\"font-medium\">{r.name}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className=\"text-right\">{formatCurrency(r.baseNet)}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className={cn('text-right', r.adjustments >=0 ? 'text-green-600' : 'text-red-600')}>{r.adjustments>=0?'+':''}{formatCurrency(r.adjustments)}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell className=\"text-right font-semibold\">{formatCurrency(r.net)}</TableCell>\r\n\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t\t<TableFooter>\r\n\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t<TableCell colSpan={3} className=\"text-right font-semibold\">Batch Total:</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell className=\"text-right font-bold\">{formatCurrency(perEmployee.reduce((s,c)=> s + c.net,0))}</TableCell>\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t</TableFooter>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h4 className=\"text-sm font-medium mb-2\">Adjustment Lines</h4>\r\n\t\t\t\t\t\t{adjustments.length === 0 && <div className=\"text-xs text-gray-500 border rounded p-3\">No adjustments added yet.</div>}\r\n\t\t\t\t\t\t{adjustments.length > 0 && (\r\n\t\t\t\t\t\t\t<div className=\"overflow-x-auto border rounded\">\r\n\t\t\t\t\t\t\t\t<Table>\r\n\t\t\t\t\t\t\t\t\t<TableHeader>\r\n\t\t\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableHead>Employee</TableHead>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableHead>Type</TableHead>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableHead className=\"text-right\">Amount</TableHead>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableHead>Reason</TableHead>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableHead>&nbsp;</TableHead>\r\n\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t</TableHeader>\r\n\t\t\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t\t\t\t{adjustments.map(a => {\r\n\t\t\t\t\t\t\t\t\t\t\tconst emp = employees.find(e => e.id === a.employeeId); return (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableRow key={a.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell>{emp?.name || a.employeeId}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell className=\"capitalize text-xs\">{a.type}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell className={cn('text-right text-sm', a.type==='deduction' ? 'text-red-600' : 'text-green-600')}>{a.type==='deduction' && '-'}{formatCurrency(a.amount)}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell className=\"text-xs max-w-[240px] truncate\" title={a.reason}>{a.reason}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell className=\"text-right space-x-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button onClick={()=>startEdit(a.id)} className=\"text-xs text-blue-600 hover:underline\">Edit</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button onClick={()=>remove(a.id)} className=\"text-xs text-red-600 hover:underline\">Remove</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t\t\t); })}\r\n\t\t\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"space-y-4\">\r\n\t\t\t\t\t<div className=\"border rounded p-4 space-y-3 bg-gray-50\">\r\n\t\t\t\t\t\t<h4 className=\"text-sm font-semibold\">{editingId ? 'Edit Adjustment' : 'Add Adjustment'}</h4>\r\n\t\t\t\t\t\t<div className=\"space-y-2\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<label className=\"text-xs font-medium block mb-1\">Employee</label>\r\n\t\t\t\t\t\t\t\t<select value={form.employeeId} onChange={e=> setForm(f => ({...f, employeeId: e.target.value}))} className=\"w-full border rounded px-2 py-1 text-sm\">\r\n\t\t\t\t\t\t\t\t\t<option value=\"\">Select employee...</option>\r\n\t\t\t\t\t\t\t\t\t{employees.map(e => <option key={e.id} value={e.id}>{e.name}</option>)}\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"grid grid-cols-2 gap-2\">\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<label className=\"text-xs font-medium block mb-1\">Type</label>\r\n\t\t\t\t\t\t\t\t\t<select value={form.type} onChange={e=> setForm(f => ({...f, type: e.target.value}))} className=\"w-full border rounded px-2 py-1 text-sm\">\r\n\t\t\t\t\t\t\t\t\t\t{adjustmentTypes.map(t => <option key={t.value} value={t.value}>{t.label}</option>)}\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<label className=\"text-xs font-medium block mb-1\">Amount</label>\r\n\t\t\t\t\t\t\t\t\t<input type=\"number\" min=\"0\" step=\"0.01\" value={form.amount} onChange={e=> setForm(f => ({...f, amount: e.target.value}))} className=\"w-full border rounded px-2 py-1 text-sm\" placeholder=\"0.00\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<label className=\"text-xs font-medium block mb-1\">Reason</label>\r\n\t\t\t\t\t\t\t\t<input type=\"text\" value={form.reason} onChange={e=> setForm(f => ({...f, reason: e.target.value}))} className=\"w-full border rounded px-2 py-1 text-sm\" placeholder=\"Optional\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"flex gap-2\">\r\n\t\t\t\t\t\t\t\t<Button type=\"button\" onClick={addOrUpdate} className=\"flex-1\" disabled={!form.employeeId || !form.amount}>{editingId ? 'Update' : 'Add'}</Button>\r\n\t\t\t\t\t\t\t\t{editingId && <Button type=\"button\" variant=\"outline\" onClick={cancelEdit}>Cancel</Button>}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{formError && <div className=\"text-[11px] text-red-600\">{formError}</div>}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"text-xs text-gray-500 leading-relaxed\">\r\n\t\t\t\t\t\t<p>Rules (future validation):</p>\r\n\t\t\t\t\t\t<ul className=\"list-disc ml-4 mt-1 space-y-1\">\r\n\t\t\t\t\t\t\t<li>Deductions cannot exceed base net.</li>\r\n\t\t\t\t\t\t\t<li>Overtime may have tiered multipliers.</li>\r\n\t\t\t\t\t\t\t<li>Track taxable vs non-taxable allowances.</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{payrollData.adjustmentAudit && payrollData.adjustmentAudit.length > 0 && (\r\n\t\t\t\t\t\t<div className=\"border rounded p-3 bg-white/50 max-h-48 overflow-auto\">\r\n\t\t\t\t\t\t\t<h4 className=\"font-semibold text-xs mb-2\">Adjustment Audit</h4>\r\n\t\t\t\t\t\t\t<ul className=\"space-y-1 text-[11px]\">\r\n\t\t\t\t\t\t\t\t{payrollData.adjustmentAudit.slice().reverse().map(a => (\r\n\t\t\t\t\t\t\t\t\t<li key={a.at + a.adjustmentId}>{new Date(a.at).toLocaleString()} - {a.action.toUpperCase()} #{a.adjustmentId.slice(0,6)} {a.details?.amount && `(amt:${a.details.amount})`}</li>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"flex justify-between\">\r\n\t\t\t\t<Button variant=\"outline\" onClick={onBack}><ChevronLeft className=\"mr-1 h-4 w-4\"/>Back</Button>\r\n\t\t\t\t<Button onClick={()=> onNext()}>Continue<ChevronRight className=\"ml-1 h-4 w-4\"/></Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nconst ReviewApprovalStep: React.FC<StepComponentProps> = ({ onNext, onBack, payrollData }) => {\r\n\tconst total = payrollData.calculations?.reduce((s,c)=> s + c.net, 0) || 0;\r\n\tconst validation = validatePayroll(payrollData);\r\n  const [includeTemp, setIncludeTemp] = useState(false);\r\n\r\n\tconst handleExportWPS = async () => {\r\n\t\tconst csv = await WPSReportService.exportCSV(payrollData.id!, { includeTemporary: includeTemp });\r\n\t\tconst blob = new Blob([csv], { type: 'text/csv' });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\tconst a = document.createElement('a');\r\n\t\ta.href = url; a.download = `WPS-${payrollData.month}-${payrollData.year}.csv`; a.click();\r\n\t\tURL.revokeObjectURL(url);\r\n\t};\r\n\tconst handleGeneratePayslips = () => {\r\n\t\tPayslipService.generateForBatch(payrollData.id!);\r\n\t\tonNext({ approved: true });\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"space-y-4\">\r\n\t\t\t<h3 className=\"text-lg font-semibold\">Review & Approve</h3>\r\n\t\t\t<div className=\"border rounded p-4 bg-gray-50 text-sm space-y-2\">\r\n\t\t\t\t<div className=\"flex justify-between\"><span>Period:</span><span>{payrollData.month}/{payrollData.year}</span></div>\r\n\t\t\t\t<div className=\"flex justify-between\"><span>Employees:</span><span>{payrollData.calculations?.length || 0}</span></div>\r\n\t\t\t\t<div className=\"flex justify-between font-medium\"><span>Total Net Payroll:</span><span>{formatCurrency(total)}</span></div>\r\n\t\t\t\t<div className=\"pt-2 text-xs\">\r\n\t\t\t\t\t{validation.issues.length === 0 ? <span className=\"text-green-600\">No validation issues.</span> : (\r\n\t\t\t\t\t\t<ul className=\"space-y-1 max-h-40 overflow-auto\">\r\n\t\t\t\t\t\t\t{validation.issues.map(i => (\r\n\t\t\t\t\t\t\t\t<li key={i.code + i.employeeId} className={i.severity==='error'?'text-red-600':'text-amber-600'}>\r\n\t\t\t\t\t\t\t\t\t[{i.severity.toUpperCase()}] {i.message}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n        <div className=\"flex items-center gap-3 text-xs pt-2\">\r\n          <label className=\"flex items-center gap-1\"><input type=\"checkbox\" checked={includeTemp} onChange={e=> setIncludeTemp(e.target.checked)} />Include Temporary in WPS</label>\r\n        </div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"flex justify-between pt-2\">\r\n\t\t\t\t<Button variant=\"outline\" onClick={onBack}><ChevronLeft className=\"mr-1 h-4 w-4\"/>Back</Button>\r\n\t\t\t\t<Button variant=\"outline\" onClick={handleExportWPS}>Export WPS CSV</Button>\r\n\t\t\t\t<Button disabled={validation.hasErrors} onClick={handleGeneratePayslips}>Approve & Generate Payslips<Check className=\"ml-1 h-4 w-4\"/></Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nconst PayslipGenerationStep: React.FC<StepComponentProps> = ({ onBack, payrollData }) => {\r\n  const [downloading, setDownloading] = useState(false);\r\n  const handlePDF = async () => {\r\n    setDownloading(true);\r\n    try {\r\n      await generateBatchPayslipPDF(payrollData.id!);\r\n    } finally { setDownloading(false); }\r\n  };\r\n\treturn (\r\n\t\t<div className=\"space-y-4\">\r\n\t\t\t<h3 className=\"text-lg font-semibold\">Payslips</h3>\r\n\t\t\t<p className=\"text-sm text-gray-600\">Payslips ready for batch {payrollData.id}. Download combined PDF below.</p>\r\n\t\t\t<div className=\"flex gap-3\">\r\n\t\t\t\t<Button variant=\"outline\" onClick={onBack}><ChevronLeft className=\"mr-1 h-4 w-4\"/>Back</Button>\r\n        <Button variant=\"outline\" disabled={downloading} onClick={handlePDF}>{downloading ? 'Generating…' : 'Download PDF'}</Button>\r\n\t\t\t\t<Button onClick={() => window.history.back()}>Finish</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport const ProcessPayrollPage: React.FC = () => {\r\n\tconst navigate = useNavigate();\r\n\tconst [step, setStep] = useState(0);\r\n\t\tconst initialMonth = new Date().getMonth() + 1;\r\n\t\tconst initialYear = new Date().getFullYear();\r\n\t\tconst [payrollData, setPayrollData] = useState<PayrollBatch>(() => {\r\n\t\t\tconst draft = PayrollService.getDraft(initialMonth, initialYear) || PayrollService.createDraft(initialMonth, initialYear);\r\n\t\t\treturn draft;\r\n\t\t});\r\n\r\n\tconst steps = [\r\n\t\t{ title: 'Select Period', icon: Calendar },\r\n\t\t{ title: 'Review Attendance', icon: Clock },\r\n\t\t{ title: 'Calculate Salaries', icon: Calculator },\r\n\t\t{ title: 'Add Adjustments', icon: PlusCircle },\r\n\t\t{ title: 'Review & Approve', icon: CheckCircle },\r\n\t\t{ title: 'Generate Payslips', icon: FileText }\r\n\t];\r\n\r\n\treturn (\r\n\t\t<div className=\"max-w-7xl mx-auto p-6\">\r\n\t\t\t{/* Stepper */}\r\n\t\t\t<div className=\"mb-8 overflow-x-auto\">\r\n\t\t\t\t<ol className=\"flex items-center gap-6\">\r\n\t\t\t\t\t{steps.map((s, idx) => {\r\n\t\t\t\t\t\tconst ActiveIcon = s.icon;\r\n\t\t\t\t\t\tconst state = idx === step ? 'active' : idx < step ? 'done' : 'upcoming';\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li key={s.title} className=\"flex items-center gap-2 min-w-[140px]\">\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName={cn(\r\n\t\t\t\t\t\t\t\t\t\t'h-10 w-10 rounded-full flex items-center justify-center text-white text-sm font-medium',\r\n\t\t\t\t\t\t\t\t\t\tstate === 'done' && 'bg-green-600',\r\n\t\t\t\t\t\t\t\t\t\tstate === 'active' && 'bg-blue-600 ring-4 ring-blue-100',\r\n\t\t\t\t\t\t\t\t\t\tstate === 'upcoming' && 'bg-gray-300 text-gray-700'\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{state === 'done' ? <Check className=\"h-5 w-5\"/> : <ActiveIcon className=\"h-5 w-5\"/>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<span className={cn('text-xs font-medium', state === 'active' && 'text-blue-700')}>{s.title}</span>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ol>\r\n\t\t\t</div>\r\n\t\t\t<Card>\r\n\t\t\t\t<CardContent className=\"p-6 space-y-4\">\r\n\t\t\t\t\t{step === 0 && <PeriodSelectionStep payrollData={payrollData} setPayrollData={setPayrollData} onNext={() => setStep(1)} />}\r\n\t\t\t\t\t{step === 1 && <AttendanceReviewStep payrollData={payrollData} setPayrollData={setPayrollData} onBack={() => setStep(0)} onNext={() => setStep(2)} />}\r\n\t\t\t\t\t\t\t\t{step === 2 && <SalaryCalculationStep payrollData={payrollData} onBack={() => setStep(1)} onNext={(d) => { setPayrollData(p => { const updated = { ...p, calculations: d.calculations }; PayrollService.updateCalculations(p.id!, d.calculations); return updated; }); setStep(3); }} />}\r\n\t\t\t\t\t{step === 3 && <AdjustmentsStep payrollData={payrollData} setPayrollData={setPayrollData} onBack={() => setStep(2)} onNext={() => setStep(4)} />}\r\n\t\t\t\t\t\t\t\t\t{step === 4 && <ReviewApprovalStep payrollData={payrollData} setPayrollData={setPayrollData} onBack={() => setStep(3)} onNext={() => { setPayrollData(p => { const updated = { ...p, status: 'approved' as const }; PayrollService.approve(p.id!); return updated; }); setStep(5); }} />}\r\n\t\t\t\t\t\t\t\t{step === 5 && <PayslipGenerationStep payrollData={payrollData} setPayrollData={setPayrollData} onBack={() => setStep(4)} onNext={() => { setPayrollData(p => { const updated = { ...p, status: 'processed' as const }; PayrollService.markProcessed(p.id!); return updated; }); navigate('/payroll/history'); }} />}\r\n\t\t\t\t</CardContent>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProcessPayrollPage;\r\n"],"names":["Calendar","createLucideIcon","Check","ChevronLeft","ChevronRight","CircleCheckBig","CirclePlus","validatePayroll","batch","issues","c","i","parseCSV","text","lines","l","header","rowsRaw","cols","idx","invalid","warnings","out","r","parts","employeeCode","dateStr","date","hours","overtime","weekend","holiday","aggregate","rows","byEmp","bucket","TemporaryAttendanceImport","batchId","status","setStatus","useState","error","setError","includeUnknown","setIncludeUnknown","handleFile","e","file","_a","temps","TemporaryEmployeeService","codeSet","t","filtered","aggregated","updated","agg","PayrollService","jsxs","jsx","generateBatchPayslipPDF","slips","PayslipService","doc","jsPDF","p","isTemp","y","amt","TableFooter","children","Card","className","CardContent","cn","PeriodSelectionStep","onNext","payrollData","setPayrollData","_","m","Button","AttendanceReviewStep","onBack","setRows","loading","setLoading","useEffect","mapped","EmployeeService","_b","_d","_c","_f","_e","updateCell","id","field","value","row","handleContinue","attendance","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","a","SalaryCalculationStep","calculations","setCalculations","mode","setMode","otRegular","setOtRegular","otWeekend","setOtWeekend","otHoliday","setOtHoliday","calculateSalaries","permanent","temporaryRaw","calcs","emp","workingDays","dailyRate","Decimal","basic","housing","transport","other","att","overtimeHours","weekendOT","holidayOT","hourlyRate","absenceDays","absenceDeduction","unpaidLeave","gross","totalDeductions","net","earnings","overtimeMonetary","rt","baseEarnings","v","formatCurrency","s","adjustmentTypes","AdjustmentsStep","form","setForm","editingId","setEditingId","employees","adjustments","formError","setFormError","addOrUpdate","amount","calc","baseNet","existingAdjTotal","prev","delta","projectedAdjTotal","projectedNet","f","remove","startEdit","adj","cancelEdit","perEmployee","ReviewApprovalStep","total","validation","includeTemp","setIncludeTemp","handleExportWPS","csv","WPSReportService","blob","url","handleGeneratePayslips","PayslipGenerationStep","downloading","setDownloading","handlePDF","ProcessPayrollPage","navigate","useNavigate","step","setStep","initialMonth","initialYear","steps","Clock","Calculator","PlusCircle","CheckCircle","FileText","ActiveIcon","state","d"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}