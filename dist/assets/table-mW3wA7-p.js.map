{"version":3,"file":"table-mW3wA7-p.js","sources":["../../src/services/api/temporaryEmployees.ts","../../src/components/ui/table.tsx"],"sourcesContent":["import { TemporaryEmployee } from '../../types/employee';\r\n\r\nconst __memoryStoreTmp: Record<string, string> = {};\r\nconst safeStorageTmp = {\r\n  getItem(k: string) { try { return (globalThis as any).localStorage?.getItem(k) ?? __memoryStoreTmp[k] ?? null; } catch { return __memoryStoreTmp[k] ?? null; } },\r\n  setItem(k: string, v: string) { try { (globalThis as any).localStorage?.setItem(k,v); } catch { /* ignore */ } __memoryStoreTmp[k]=v; }\r\n};\r\n\r\nexport class TemporaryEmployeeService {\r\n  private static STORAGE_KEY='nipon_temporary_employees';\r\n  static getAll(): TemporaryEmployee[] { const s=safeStorageTmp.getItem(this.STORAGE_KEY); if(!s){ this.seedInitial(); return this.getAll(); } return JSON.parse(s); }\r\n  static create(data: Omit<TemporaryEmployee,'id'|'employeeCode'|'createdAt'|'updatedAt'|'employeeType'>): TemporaryEmployee { const list=this.getAll(); const emp: TemporaryEmployee={...data,id:crypto.randomUUID(),employeeCode:this.genCode(),employeeType:'Temporary',createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}; list.push(emp); this.save(list); return emp; }\r\n  static calculateEarnings(e: TemporaryEmployee): number { const {rateType,rate,overtimeRate,foodAllowance}=e.compensation; const att=e.attendance; let total=0; if(rateType==='Daily') total = rate*att.totalDaysWorked; else if(rateType==='Hourly') { total = rate*(att.totalHoursWorked||0); if(att.overtimeHours && overtimeRate) total+=overtimeRate*att.overtimeHours; } else { total=rate; } total += foodAllowance||0; return Math.round(total*100)/100; }\r\n  static processPayment(id:string, amount:number) { const list=this.getAll(); const emp=list.find(e=>e.id===id); if(!emp) return; emp.payment.lastPaymentDate=new Date().toISOString(); emp.payment.lastPaymentAmount=amount; emp.compensation.totalEarnings=(emp.compensation.totalEarnings||0)+amount; this.save(list); }\r\n  // Avoid calling getAll() here to prevent recursive seeding loops; read raw storage directly.\r\n  private static genCode(): string {\r\n    const year = new Date().getFullYear();\r\n    const raw = safeStorageTmp.getItem(this.STORAGE_KEY);\r\n    let existing: TemporaryEmployee[] = [];\r\n    if (raw) { try { existing = JSON.parse(raw) as TemporaryEmployee[]; } catch { existing = []; } }\r\n    const count = existing.filter(e => e.employeeCode.startsWith(`TMP-${year}`)).length + 1;\r\n    return `TMP-${year}-${String(count).padStart(4,'0')}`;\r\n  }\r\n  private static save(list: TemporaryEmployee[]) { safeStorageTmp.setItem(this.STORAGE_KEY, JSON.stringify(list)); }\r\n  private static seedInitial() { const sample: Omit<TemporaryEmployee,'id'|'employeeCode'|'createdAt'|'updatedAt'|'employeeType'>[]=[{ personalInfo:{firstName:'Kumar',lastName:'Singh',fatherName:'Raj Singh',dateOfBirth:'1990-07-20',placeOfBirth:'Mumbai',nationality:'Indian',religion:'Hindu',gender:'Male',maritalStatus:'Single',bloodGroup:'B+'}, documents:{ qatarId:{number:'29812345678',issueDate:'2023-02-01',expiryDate:'2025-12-31',sponsor:'Client Company LLC'}, passport:{number:'P1234567',issueDate:'2021-03-15',expiryDate:'2031-03-14',issuePlace:'Mumbai'}, visa:{number:'VT987654',issueDate:'2024-01-01',expiryDate:'2024-03-31',type:'Visit',sponsor:'Client Company LLC'}, workPermit:{number:'WP123456',issueDate:'2024-01-15',expiryDate:'2024-03-31'}}, contract:{contractNumber:'TMP-2024-001',startDate:'2024-01-15',endDate:'2024-03-31',client:'Qatar Petroleum',clientLocation:'Ras Laffan',position:'Welder',workType:'Daily Wage'}, compensation:{rateType:'Daily',rate:150,overtimeRate:25,foodAllowance:20,transportProvided:true,accommodationProvided:true}, attendance:{totalDaysWorked:45,overtimeHours:30}, payment:{paymentMethod:'Cash'}, contact:{mobileQatar:'+97466789012',address:'Labor Camp, Industrial Area, Doha',emergencyContact:{name:'Priya Singh',relationship:'Mother',phone:'+919876543210'}}, status:'Active' }];\r\n    const list = sample.map(s=>({...s,id:crypto.randomUUID(),employeeCode:this.genCode(),employeeType:'Temporary',createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()})) as TemporaryEmployee[]; this.save(list); }\r\n}\r\n","import * as React from 'react';\r\nimport { cn } from '../../lib/cn';\r\n\r\nexport const Table: React.FC<React.HTMLAttributes<HTMLTableElement>> = ({ className, ...props }) => (\r\n  <table className={cn('w-full caption-bottom text-sm', className)} {...props} />\r\n);\r\nexport const TableHeader: React.FC<React.HTMLAttributes<HTMLTableSectionElement>> = ({ className, ...props }) => (\r\n  <thead className={cn('[&_tr]:border-b', className)} {...props} />\r\n);\r\nexport const TableBody: React.FC<React.HTMLAttributes<HTMLTableSectionElement>> = ({ className, ...props }) => (\r\n  <tbody className={cn('[&_tr:last-child]:border-0', className)} {...props} />\r\n);\r\nexport const TableRow: React.FC<React.HTMLAttributes<HTMLTableRowElement>> = ({ className, ...props }) => (\r\n  <tr className={cn('border-b transition-colors hover:bg-sand/40 data-[state=selected]:bg-sand', className)} {...props} />\r\n);\r\nexport const TableHead: React.FC<React.ThHTMLAttributes<HTMLTableCellElement>> = ({ className, ...props }) => (\r\n  <th className={cn('h-10 px-2 text-left align-middle font-medium text-gray-600', className)} {...props} />\r\n);\r\nexport const TableCell: React.FC<React.TdHTMLAttributes<HTMLTableCellElement>> = ({ className, ...props }) => (\r\n  <td className={cn('p-2 align-middle', className)} {...props} />\r\n);\r\nexport const TableCaption: React.FC<React.HTMLAttributes<HTMLTableCaptionElement>> = ({ className, ...props }) => (\r\n  <caption className={cn('mt-4 text-sm text-gray-500', className)} {...props} />\r\n);"],"names":["__memoryStoreTmp","safeStorageTmp","k","_a","v","TemporaryEmployeeService","s","data","list","emp","e","rateType","rate","overtimeRate","foodAllowance","att","total","id","amount","year","raw","existing","count","__publicField","Table","className","props","jsx","cn","TableHeader","TableBody","TableRow","TableHead","TableCell"],"mappings":"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"}