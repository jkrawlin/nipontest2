{"version":3,"file":"customers-qEHjyBNn.js","sources":["../../src/services/api/customers.ts"],"sourcesContent":["import type { Customer } from '../../types/customer';\r\n\r\nexport class CustomerService {\r\n  private static STORAGE_KEY = 'nipon_customers';\r\n\r\n  static getAll(): Customer[] {\r\n    try {\r\n      const stored = localStorage.getItem(this.STORAGE_KEY);\r\n      if (!stored) {\r\n        this.seedInitialData();\r\n        return this.getAll();\r\n      }\r\n      return JSON.parse(stored);\r\n    } catch {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  static getById(id: string): Customer | undefined {\r\n    return this.getAll().find(c => c.id === id);\r\n  }\r\n\r\n  static create(data: Omit<Customer, 'id' | 'customerCode' | 'createdAt' | 'updatedAt'>): Customer {\r\n    const customers = this.getAll();\r\n    const newCustomer: Customer = {\r\n      ...data,\r\n      id: crypto.randomUUID(),\r\n      customerCode: this.generateCustomerCode(),\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString(),\r\n    } as Customer;\r\n    customers.push(newCustomer);\r\n    this.save(customers);\r\n    return newCustomer;\r\n  }\r\n\r\n  static update(id: string, data: Partial<Customer>): Customer | undefined {\r\n    const customers = this.getAll();\r\n    const index = customers.findIndex(c => c.id === id);\r\n    if (index === -1) return undefined;\r\n    customers[index] = { ...customers[index], ...data, updatedAt: new Date().toISOString() };\r\n    this.save(customers);\r\n    return customers[index];\r\n  }\r\n\r\n  static deployEmployee(customerId: string, employeeData: any): void {\r\n    const customer = this.getById(customerId);\r\n    if (!customer) return;\r\n    customer.deployment.currentEmployees.push(employeeData);\r\n    customer.deployment.totalDeployed++;\r\n    customer.deployment.totalActive++;\r\n    this.update(customerId, customer);\r\n  }\r\n\r\n  static removeEmployee(customerId: string, employeeId: string): void {\r\n    const customer = this.getById(customerId);\r\n    if (!customer) return;\r\n    const idx = customer.deployment.currentEmployees.findIndex(e => e.employeeId === employeeId);\r\n    if (idx !== -1) {\r\n      customer.deployment.currentEmployees[idx].status = 'Completed';\r\n      customer.deployment.currentEmployees[idx].endDate = new Date().toISOString();\r\n      customer.deployment.totalActive--;\r\n    }\r\n    this.update(customerId, customer);\r\n  }\r\n\r\n  static calculateMonthlyRevenue(customerId: string): number {\r\n    const customer = this.getById(customerId);\r\n    if (!customer) return 0;\r\n    let revenue = 0;\r\n    customer.deployment.currentEmployees.filter(e => e.status === 'Active').forEach(emp => {\r\n      const rate = customer.rates.defaultRates.find(r => r.position === emp.position);\r\n      if (rate) {\r\n        if (rate.rateType === 'Monthly') revenue += rate.normalRate; else if (rate.rateType === 'Daily') revenue += rate.normalRate * 30; else if (rate.rateType === 'Hourly') revenue += rate.normalRate * 8 * 22; // rough\r\n      }\r\n    });\r\n    return revenue;\r\n  }\r\n\r\n  static getTopCustomers(limit = 5): Customer[] {\r\n    return this.getAll().sort((a,b) => b.financial.totalRevenue - a.financial.totalRevenue).slice(0, limit);\r\n  }\r\n\r\n  static getExpiringContracts(days = 30): Customer[] {\r\n    const cutoff = new Date(); cutoff.setDate(cutoff.getDate()+days);\r\n    return this.getAll().filter(c => c.contract.endDate && new Date(c.contract.endDate) <= cutoff && new Date(c.contract.endDate) >= new Date());\r\n  }\r\n\r\n  private static generateCustomerCode(): string {\r\n    const year = new Date().getFullYear();\r\n    const count = this.getAll().filter(c => c.customerCode.startsWith(`CUS-${year}`)).length + 1;\r\n    return `CUS-${year}-${String(count).padStart(4,'0')}`;\r\n  }\r\n\r\n  private static save(customers: Customer[]): void {\r\n    localStorage.setItem(this.STORAGE_KEY, JSON.stringify(customers));\r\n  }\r\n\r\n  private static seedInitialData(): void {\r\n    const sample: any[] = [\r\n      {\r\n        companyInfo: { name: 'Qatar Petroleum', nameArabic: 'قطر للبترول', tradeLicenseNumber: 'TL123456', registrationNumber: 'CR123456', taxNumber: 'TAX123456', industry: 'Oil & Gas', type: 'Government', website: 'www.qp.com.qa' },\r\n        contact: { address: 'P.O. Box 3212, West Bay, Doha, Qatar', city: 'Doha', country: 'Qatar', phone: '+974 4444 1111', email: 'contracts@qp.com.qa' },\r\n        primaryContact: { name: 'Abdullah Al-Thani', nameArabic: 'عبدالله الثاني', position: 'Procurement Manager', mobile: '+974 5555 1234', email: 'abdullah.thani@qp.com.qa' },\r\n        contract: { contractNumber: 'QP-2024-MC-001', startDate: '2024-01-01', endDate: '2026-12-31', type: 'Master Agreement', status: 'Active', creditLimit: 500000, paymentTerms: '30 Days' },\r\n        billing: { vatRegistered: true, vatNumber: 'VAT123456789', currency: 'QAR', invoiceFrequency: 'Monthly' },\r\n        requirements: { manpowerTypes: ['Engineers','Technicians','Safety Officers','Laborers'], locations: ['Ras Laffan','Dukhan','Mesaieed'], minimumWorkers: 50, maximumWorkers: 200, safetyTrainingRequired: true, medicalRequired: true, transportProvided: true, accommodationProvided: false },\r\n        rates: { defaultRates: [ { position:'Engineer', rateType:'Daily', normalRate:350, overtimeRate:60, holidayRate:700 }, { position:'Technician', rateType:'Daily', normalRate:250, overtimeRate:45, holidayRate:500 }, { position:'Laborer', rateType:'Daily', normalRate:150, overtimeRate:25, holidayRate:300 } ] },\r\n        deployment: { currentEmployees: [], totalDeployed: 0, totalActive: 0 },\r\n        financial: { totalRevenue: 2500000, currentMonthRevenue: 180000, outstandingAmount: 360000, creditUsed: 360000, paymentHistory: [] },\r\n        documents: {},\r\n        status: 'Active', rating: 'Excellent'\r\n      },\r\n      {\r\n        companyInfo: { name: 'Ashghal Public Works Authority', nameArabic: 'هيئة الأشغال العامة', tradeLicenseNumber: 'TL789012', registrationNumber: 'CR789012', industry: 'Construction', type: 'Government', website: 'www.ashghal.gov.qa' },\r\n        contact: { address: 'P.O. Box 22188, Doha, Qatar', city: 'Doha', country: 'Qatar', phone: '+974 4444 2222', email: 'procurement@ashghal.gov.qa' },\r\n        primaryContact: { name: 'Mohammed Al-Kuwari', position: 'HR Manager', mobile: '+974 5555 5678', email: 'mohammed.kuwari@ashghal.gov.qa' },\r\n        contract: { contractNumber: 'ASH-2024-001', startDate: '2024-03-01', endDate: '2025-02-28', type: 'Annual', status: 'Active', creditLimit: 300000, paymentTerms: '45 Days' },\r\n        billing: { vatRegistered: false, currency: 'QAR', invoiceFrequency: 'Monthly' },\r\n        requirements: { manpowerTypes: ['Civil Engineers','Surveyors','Drivers','Laborers'], locations: ['Lusail','Pearl Qatar','Doha Metro Sites'], safetyTrainingRequired: true, medicalRequired: true, transportProvided: false, accommodationProvided: false },\r\n        rates: { defaultRates: [ { position:'Civil Engineer', rateType:'Monthly', normalRate:12000, overtimeRate:70 }, { position:'Surveyor', rateType:'Monthly', normalRate:8000, overtimeRate:50 }, { position:'Driver', rateType:'Daily', normalRate:180, overtimeRate:30 } ] },\r\n        deployment: { currentEmployees: [], totalDeployed: 0, totalActive: 0 },\r\n        financial: { totalRevenue: 1800000, currentMonthRevenue: 120000, outstandingAmount: 240000, creditUsed: 240000, paymentHistory: [] },\r\n        documents: {},\r\n        status: 'Active', rating: 'Good'\r\n      }\r\n    ];\r\n\r\n    const customers: Customer[] = sample.map(s => ({\r\n      ...s,\r\n      id: crypto.randomUUID(),\r\n      customerCode: this.generateCustomerCode(),\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString(),\r\n      createdBy: 'admin@niponpayroll.qa',\r\n      lastModifiedBy: 'admin@niponpayroll.qa'\r\n    }));\r\n    this.save(customers);\r\n  }\r\n}\r\n"],"names":["CustomerService","stored","id","c","data","customers","newCustomer","index","customerId","employeeData","customer","employeeId","idx","e","revenue","emp","rate","r","limit","b","days","cutoff","year","count","s","__publicField"],"mappings":"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"}