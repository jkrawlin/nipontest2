{"version":3,"file":"Dashboard-By5HpuW_.js","sources":["../../src/pages/dashboard/Dashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../../components/ui/card';\r\nimport { formatCurrency } from '../../lib/formatters';\r\nimport { Badge } from '../../components/ui/badge';\r\nimport { EmployeeService } from '../../services/api/employees';\r\nimport { PayrollService } from '../../services/api/payroll';\r\nimport { CustomerService } from '../../services/api/customers';\r\nimport type { ExpiringDocument } from '../../types/employee';\r\n\r\ninterface DashboardStats {\r\n  totalEmployees: number;\r\n  activeEmployees: number;\r\n  onLeaveEmployees: number;\r\n  documentsCritical: number;\r\n  documentsWarning: number;\r\n  documentsExpired: number;\r\n  currentMonthPayroll: number;\r\n  lastMonthPayroll: number;\r\n  payrollTrend: number;\r\n  departments: number;\r\n  nationalities: number;\r\n  totalCustomers?: number;\r\n  activeCustomers?: number;\r\n  customerMonthlyRevenue?: number;\r\n}\r\n\r\nexport const DashboardPage: React.FC = () => {\r\n  const [stats, setStats] = useState<DashboardStats | null>(null);\r\n  const [expiringDocs, setExpiringDocs] = useState<ExpiringDocument[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => { (async () => {\r\n    try {\r\n      const employees = await EmployeeService.getAllEmployees();\r\n      const active = employees.filter(e => e.status === 'Active');\r\n      const expDocs = await EmployeeService.getExpiringDocuments(120);\r\n      const month = new Date().getMonth()+1; const year = new Date().getFullYear();\r\n      // Approx payroll: sum current draft/approved batch or calculations if exist\r\n      const batches = PayrollService.list().filter(b => b.month===month && b.year===year);\r\n      const currentPayroll = batches.reduce((s,b)=> s + (b.calculations?.reduce((a,c)=> a + c.net,0) || 0),0);\r\n      const dLast = new Date(); dLast.setMonth(dLast.getMonth()-1);\r\n      const lastBatches = PayrollService.list().filter(b => b.month=== (dLast.getMonth()+1) && b.year===dLast.getFullYear());\r\n      const lastPayroll = lastBatches.reduce((s,b)=> s + (b.calculations?.reduce((a,c)=> a + c.net,0) || 0),0);\r\n      // Departments only meaningful for permanent employees\r\n      const departments = new Set(\r\n        employees.filter(e=> e.employeeType==='Permanent').map(e => e.employment.department)\r\n      ).size;\r\n      const nationalities = new Set(employees.map(e => e.personalInfo.nationality)).size;\r\n      const docsCritical = expDocs.filter(d=> d.status==='critical').length;\r\n      const docsWarning = expDocs.filter(d=> d.status==='warning').length;\r\n      const docsExpired = expDocs.filter(d=> d.status==='expired').length;\r\n      const customers = CustomerService.getAll();\r\n      const customerMonthlyRevenue = customers.reduce((s,c)=> s + c.financial.currentMonthRevenue,0);\r\n      setStats({\r\n        totalEmployees: employees.length,\r\n        activeEmployees: active.length,\r\n        onLeaveEmployees: employees.filter(e=> e.status==='On Leave').length,\r\n        documentsCritical: docsCritical,\r\n        documentsWarning: docsWarning,\r\n        documentsExpired: docsExpired,\r\n        currentMonthPayroll: currentPayroll,\r\n        lastMonthPayroll: lastPayroll,\r\n        payrollTrend: lastPayroll>0 ? ((currentPayroll-lastPayroll)/lastPayroll)*100 : 0,\r\n        departments,\r\n        nationalities,\r\n        totalCustomers: customers.length,\r\n        activeCustomers: customers.filter(c=> c.status==='Active').length,\r\n        customerMonthlyRevenue\r\n      });\r\n      setExpiringDocs(expDocs.slice(0,8));\r\n    } finally { setLoading(false); }\r\n  })(); }, []);\r\n\r\n  if (loading) return <div className=\"p-6 text-sm text-gray-500\">Loading dashboard…</div>;\r\n\r\n  return (\r\n    <div className=\"p-6 space-y-6\">\r\n      <div className=\"space-y-1\">\r\n        <h1 className=\"text-2xl font-semibold\">Dashboard</h1>\r\n        <p className=\"text-sm text-gray-600\">Operational overview & compliance snapshot</p>\r\n      </div>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6\">\r\n        <Card><CardHeader><CardTitle className=\"text-sm font-medium text-gray-500\">Total Employees</CardTitle></CardHeader><CardContent><p className=\"text-2xl font-bold\">{stats?.totalEmployees}</p><p className=\"text-[11px] text-gray-500\">{stats?.activeEmployees} active</p></CardContent></Card>\r\n        <Card><CardHeader><CardTitle className=\"text-sm font-medium text-gray-500\">This Month Payroll</CardTitle></CardHeader><CardContent><p className=\"text-2xl font-bold\">{formatCurrency(stats?.currentMonthPayroll||0)}</p><p className=\"text-[11px] text-gray-500\">Trend {stats && stats.payrollTrend.toFixed(1)}%</p></CardContent></Card>\r\n        <Card><CardHeader><CardTitle className=\"text-sm font-medium text-gray-500\">Document Alerts</CardTitle></CardHeader><CardContent><p className=\"text-2xl font-bold\">{(stats?.documentsCritical||0)+(stats?.documentsExpired||0)}</p><p className=\"text-[11px] text-gray-500\">{stats?.documentsExpired} expired</p></CardContent></Card>\r\n        <Card><CardHeader><CardTitle className=\"text-sm font-medium text-gray-500\">Departments</CardTitle></CardHeader><CardContent><p className=\"text-2xl font-bold\">{stats?.departments}</p><p className=\"text-[11px] text-gray-500\">{stats?.nationalities} nationalities</p></CardContent></Card>\r\n        <Card><CardHeader><CardTitle className=\"text-sm font-medium text-gray-500\">Customers</CardTitle></CardHeader><CardContent><p className=\"text-2xl font-bold\">{stats?.totalCustomers}</p><p className=\"text-[11px] text-gray-500\">{stats?.activeCustomers} active</p></CardContent></Card>\r\n      </div>\r\n      {expiringDocs.length>0 && (\r\n        <Card>\r\n          <CardHeader><CardTitle>Upcoming Expiries</CardTitle><CardDescription>Top priority documents (next 120 days)</CardDescription></CardHeader>\r\n          <CardContent>\r\n            <div className=\"divide-y\">\r\n              {expiringDocs.map(d => (\r\n                <div key={d.employeeId + d.documentType} className=\"flex items-center justify-between py-2 text-sm\">\r\n                  <div className=\"flex flex-col\">\r\n                    <span className=\"font-medium\">{d.employeeName}</span>\r\n                    <span className=\"text-[11px] text-gray-500\">{d.documentType} – {new Date(d.expiryDate).toLocaleDateString('en-GB')}</span>\r\n                  </div>\r\n                  <Badge variant={d.status==='expired' ? 'destructive' : d.status==='critical' ? 'outline' : 'secondary'} className={d.status==='critical' ? 'border-amber-500 text-amber-700' : ''}>{d.status==='expired'?'EXPIRED': `${d.daysRemaining}d`}</Badge>\r\n                </div>\r\n              ))}\r\n              {expiringDocs.length===0 && <div className=\"text-xs text-gray-500 py-4\">No upcoming expiries in window.</div>}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"names":["DashboardPage","stats","setStats","useState","expiringDocs","setExpiringDocs","loading","setLoading","useEffect","employees","EmployeeService","active","e","expDocs","month","year","currentPayroll","PayrollService","b","_a","a","c","dLast","lastPayroll","departments","nationalities","docsCritical","d","docsWarning","docsExpired","customers","CustomerService","customerMonthlyRevenue","jsx","jsxs","Card","CardHeader","CardTitle","CardContent","CardDescription","Badge"],"mappings":"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"}