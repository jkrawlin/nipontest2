{"version":3,"file":"employees-D2MDJNGt.js","sources":["../../src/services/api/employees.ts"],"sourcesContent":["// Compatibility shim bridging legacy unified EmployeeService API with new separated\r\n// PermanentEmployeeService & TemporaryEmployeeService. Only exposes read/aggregate\r\n// operations needed by existing dashboard & report code. Creation/updating should\r\n// use the specific services directly.\r\nimport type { Employee, PermanentEmployee, TemporaryEmployee, ExpiringDocument } from '../../types/employee';\r\nimport { PermanentEmployeeService } from './permanentEmployees';\r\nimport { TemporaryEmployeeService } from './temporaryEmployees';\r\nimport { getAllPermanentEmployeesFS, getAllTemporaryEmployeesFS } from '../firestore/employees';\r\n\r\nconst USE_FS = import.meta.env.VITE_DATA_BACKEND === 'firestore' && import.meta.env.MODE !== 'test';\r\n\r\nexport interface EmployeeQueryParams { page?: number; pageSize?: number; search?: string }\r\nexport interface EmployeeListResponse { employees: Employee[]; count: number }\r\n\r\nfunction searchFilter(list: Employee[], term?: string) {\r\n  if (!term) return list; const s = term.toLowerCase();\r\n  return list.filter(e => e.employeeCode.toLowerCase().includes(s) || e.personalInfo.firstName.toLowerCase().includes(s) || e.personalInfo.lastName.toLowerCase().includes(s));\r\n}\r\n\r\nfunction projectExpiries(permanent: PermanentEmployee[], temporary: TemporaryEmployee[], withinDays: number): ExpiringDocument[] {\r\n  const todayMs = Date.now(); const DAY = 86400000; const out: ExpiringDocument[] = [];\r\n  const add = (emp: Employee, label: string, dateStr?: string, number?: string) => {\r\n    if (!dateStr) return; const diffDays = Math.floor((new Date(dateStr).getTime() - todayMs)/DAY);\r\n    if (diffDays > withinDays) return;\r\n    let status: ExpiringDocument['status'] = 'valid';\r\n    if (diffDays < 0) status = 'expired'; else if (diffDays <= 15) status = 'critical'; else if (diffDays <= 45) status = 'warning';\r\n    out.push({ employeeId: emp.id, employeeType: emp.employeeType, employeeName: `${emp.personalInfo.firstName} ${emp.personalInfo.lastName}`, documentType: label, documentNumber: number, expiryDate: dateStr, daysRemaining: diffDays, status });\r\n  };\r\n  permanent.forEach(p => {\r\n    add(p,'Qatar ID', p.documents.qatarId.expiryDate, p.documents.qatarId.number);\r\n    add(p,'Passport', p.documents.passport.expiryDate, p.documents.passport.number);\r\n    add(p,'Visa', p.documents.visa.expiryDate, p.documents.visa.number);\r\n    add(p,'Health Card', p.documents.healthCard.expiryDate, p.documents.healthCard.number);\r\n  });\r\n  temporary.forEach(t => {\r\n    if (t.documents.qatarId) add(t,'Qatar ID', t.documents.qatarId.expiryDate, t.documents.qatarId.number);\r\n    add(t,'Passport', t.documents.passport.expiryDate, t.documents.passport.number);\r\n    if (t.documents.visa) add(t,'Visa', t.documents.visa.expiryDate, t.documents.visa.number);\r\n    if (t.documents.workPermit) add(t,'Work Permit', t.documents.workPermit.expiryDate, t.documents.workPermit.number);\r\n  });\r\n  return out.sort((a,b)=> a.daysRemaining - b.daysRemaining);\r\n}\r\n\r\nexport const EmployeeService = {\r\n  initialize() {/* no-op for shim */},\r\n  async list(params: EmployeeQueryParams = {}): Promise<EmployeeListResponse> {\r\n    const all: Employee[] = USE_FS\r\n      ? [\r\n          ...await getAllPermanentEmployeesFS(),\r\n          ...await getAllTemporaryEmployeesFS()\r\n        ]\r\n      : [\r\n          ...PermanentEmployeeService.getAll(),\r\n          ...TemporaryEmployeeService.getAll()\r\n        ];\r\n    const filtered = searchFilter(all, params.search);\r\n    const pageSize = params.pageSize ?? 20; const page = params.page && params.page>0 ? params.page : 1; const start=(page-1)*pageSize; const end=start+pageSize;\r\n    return { employees: filtered.slice(start,end), count: filtered.length };\r\n  },\r\n  async getAllEmployees(): Promise<Employee[]> {\r\n    if (USE_FS) return [\r\n      ...await getAllPermanentEmployeesFS(),\r\n      ...await getAllTemporaryEmployeesFS()\r\n    ];\r\n    return [...PermanentEmployeeService.getAll(), ...TemporaryEmployeeService.getAll()];\r\n  },\r\n  async getActiveEmployees(): Promise<Employee[]> { return (await this.getAllEmployees()).filter(e=> e.status==='Active'); },\r\n  async getExpiringDocuments(withinDays=90): Promise<ExpiringDocument[]> {\r\n    if (USE_FS) {\r\n      const perms = await getAllPermanentEmployeesFS();\r\n      const temps = await getAllTemporaryEmployeesFS();\r\n      return projectExpiries(perms, temps, withinDays);\r\n    }\r\n    return projectExpiries(PermanentEmployeeService.getAll(), TemporaryEmployeeService.getAll(), withinDays);\r\n  },\r\n  async recalcEndOfServiceAll() { /* To be implemented if gratuity recalculation changes */ },\r\n  async create() { throw new Error('Use PermanentEmployeeService.create or TemporaryEmployeeService.create'); },\r\n  async update() { throw new Error('Use specific service update method'); },\r\n  async getById(id:string) { return (await this.getAllEmployees()).find(e=> e.id===id) || null; }\r\n};"],"names":["searchFilter","list","term","s","e","projectExpiries","permanent","temporary","withinDays","todayMs","DAY","out","add","emp","label","dateStr","number","diffDays","status","p","t","a","b","EmployeeService","params","all","getAllPermanentEmployeesFS","getAllTemporaryEmployeesFS","filtered","pageSize","start","end","perms","temps","id"],"mappings":"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"}