{"version":3,"file":"CustomerDeploy-iMKhB3ph.js","sources":["../../src/pages/customers/CustomerDeploy.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { CustomerService } from '../../services/api/customers';\r\nimport { useEmployees } from '../../hooks/useEmployees';\r\nimport type { Employee } from '../../types/employee';\r\nimport { Button } from '../../components/ui/button';\r\nimport { Card } from '../../components/ui/card';\r\nimport type { Customer } from '../../types/customer';\r\n\r\nexport const CustomerDeploy: React.FC = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [customer, setCustomer] = useState<Customer | null>(null);\r\n  const employeeQuery = useEmployees({ pageSize: 1000 });\r\n  const allEmployees: Employee[] = employeeQuery.data?.employees || [];\r\n  const [selectedEmployees, setSelected] = useState<string[]>([]);\r\n  const [position, setPosition] = useState('');\r\n  const [deploying, setDeploying] = useState(false);\r\n\r\n  useEffect(()=> {\r\n    if (id) {\r\n      const c = CustomerService.getById(id);\r\n      setCustomer(c||null);\r\n    }\r\n  }, [id]);\r\n\r\n  if (!customer) return <div className=\"p-6 text-sm\">Loading...</div>;\r\n\r\n  const toggle = (empId: string) => {\r\n    setSelected(s => s.includes(empId) ? s.filter(i => i!==empId) : [...s, empId]);\r\n  };\r\n\r\n  const deploy = () => {\r\n    if (!position) return;\r\n    setDeploying(true);\r\n    selectedEmployees.forEach(empId => {\r\n      const emp = allEmployees.find((e: Employee) => e.id === empId);\r\n      if (emp) {\r\n        const fullName = `${emp.personalInfo.firstName} ${emp.personalInfo.lastName}`;\r\n        const existingPosition = emp.employeeType === 'Permanent' ? emp.employment.position : emp.contract.position;\r\n        CustomerService.deployEmployee(customer.id, {\r\n          employeeId: emp.id,\r\n          employeeName: fullName,\r\n          position: position || existingPosition,\r\n          startDate: new Date().toISOString(),\r\n          status: 'Active'\r\n        });\r\n      }\r\n    });\r\n    setDeploying(false);\r\n    navigate(`/customers/${customer.id}`);\r\n  };\r\n\r\n  const availableEmployees = allEmployees.filter((e: Employee) => !customer.deployment.currentEmployees.some(d => d.employeeId === e.id && d.status === 'Active'));\r\n\r\n  return (\r\n    <div className=\"p-6 space-y-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-semibold\">Deploy Staff</h1>\r\n          <p className=\"text-sm text-gray-600\">Assign employees to {customer.companyInfo.name}</p>\r\n        </div>\r\n        <Button variant=\"outline\" onClick={()=> navigate(-1)}>Back</Button>\r\n      </div>\r\n      <Card className=\"p-6 space-y-4\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 items-end\">\r\n          <div>\r\n            <label className=\"block text-[11px] uppercase mb-1\">Deployment Position</label>\r\n            <input className=\"w-full border rounded px-2 py-1\" value={position} onChange={e=> setPosition(e.target.value)} placeholder=\"e.g. Technician\" />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-[11px] uppercase mb-1\">Selected</label>\r\n            <div className=\"text-sm font-medium\">{selectedEmployees.length} employees</div>\r\n          </div>\r\n          <div className=\"md:col-span-2 flex justify-end\">\r\n            <Button disabled={deploying || selectedEmployees.length===0 || !position} onClick={deploy}>{deploying? 'Deploying...':'Deploy Selected'}</Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"border rounded overflow-hidden\">\r\n          <table className=\"w-full text-sm\">\r\n            <thead className=\"bg-gray-50 text-xs uppercase text-gray-500\"><tr><th className=\"text-left px-3 py-2\">Select</th><th className=\"text-left px-3 py-2\">Employee</th><th className=\"text-left px-3 py-2\">Type</th><th className=\"text-left px-3 py-2\">Position</th></tr></thead>\r\n            <tbody>\r\n              {availableEmployees.map((emp: Employee) => (\r\n                <tr key={emp.id} className=\"border-t hover:bg-gray-50\">\r\n                  <td className=\"px-3 py-2\"><input type=\"checkbox\" checked={selectedEmployees.includes(emp.id)} onChange={()=> toggle(emp.id)} /></td>\r\n                  <td className=\"px-3 py-2 font-medium\">{emp.personalInfo.firstName} {emp.personalInfo.lastName}</td>\r\n                  <td className=\"px-3 py-2 text-xs\">{emp.employeeType}</td>\r\n                  <td className=\"px-3 py-2 text-xs\">{emp.employeeType==='Permanent'? emp.employment.position : emp.contract.position}</td>\r\n                </tr>\r\n              ))}\r\n              {availableEmployees.length===0 && <tr><td colSpan={4} className=\"px-3 py-4 text-center text-xs text-gray-500\">No available employees</td></tr>}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerDeploy;\r\n"],"names":["CustomerDeploy","id","useParams","navigate","useNavigate","customer","setCustomer","useState","allEmployees","_a","useEmployees","selectedEmployees","setSelected","position","setPosition","deploying","setDeploying","useEffect","c","CustomerService","toggle","empId","s","i","deploy","emp","e","fullName","existingPosition","availableEmployees","d","jsxs","jsx","Button","Card"],"mappings":"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"}