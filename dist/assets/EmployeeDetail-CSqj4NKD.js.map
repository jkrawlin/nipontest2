{"version":3,"file":"EmployeeDetail-CSqj4NKD.js","sources":["../../src/services/firestore/salaryHistory.ts","../../src/services/api/salaryHistory.ts","../../src/services/firestore/leaves.ts","../../src/services/api/leaves.ts","../../src/pages/employees/EmployeeDetail.tsx"],"sourcesContent":["import { collection, addDoc, getDocs, serverTimestamp } from 'firebase/firestore';\r\nimport { firebaseDb } from '../../config/firebase';\r\nimport type { SalaryHistory } from '../../types/history';\r\n\r\nexport const SalaryHistoryFS = {\r\n  async getAll(): Promise<SalaryHistory[]> {\r\n    const snap = await getDocs(collection(firebaseDb, 'salary_history'));\r\n    return snap.docs.map(d => ({ id: d.id, ...(d.data() as any) })) as SalaryHistory[];\r\n  },\r\n  async getByEmployee(employeeId: string): Promise<SalaryHistory[]> {\r\n    const all = await this.getAll();\r\n    return all.filter(h => h.employeeId === employeeId);\r\n  },\r\n  async add(record: Omit<SalaryHistory, 'id'>): Promise<SalaryHistory> {\r\n    const docData = { ...record, createdAt: serverTimestamp() } as any;\r\n    const ref = await addDoc(collection(firebaseDb, 'salary_history'), docData);\r\n    return { ...record, id: ref.id } as SalaryHistory;\r\n  }\r\n};\r\n","import { SalaryHistory } from '../../types/history';\r\nimport { SalaryHistoryFS } from '../firestore/salaryHistory';\r\nconst USE_FS = import.meta.env.VITE_DATA_BACKEND === 'firestore' && import.meta.env.MODE !== 'test';\r\n\r\nconst mem: Record<string, string> = {};\r\nconst store = {\r\n  getItem(k: string) { try { return (globalThis as any).localStorage?.getItem(k) ?? mem[k] ?? null; } catch { return mem[k] ?? null; } },\r\n  setItem(k: string, v: string) { try { (globalThis as any).localStorage?.setItem(k, v); } catch {} mem[k]=v; }\r\n};\r\n\r\nconst KEY = 'nipon_salary_history';\r\n\r\nexport const SalaryHistoryService = {\r\n  getAll(): SalaryHistory[] | Promise<SalaryHistory[]> { return USE_FS ? SalaryHistoryFS.getAll() : (store.getItem(KEY) ? JSON.parse(store.getItem(KEY) as string) : []); },\r\n  getByEmployee(employeeId: string): SalaryHistory[] | Promise<SalaryHistory[]> {\r\n    if (USE_FS) return SalaryHistoryFS.getByEmployee(employeeId);\r\n    return (this.getAll() as SalaryHistory[]).filter(h => h.employeeId === employeeId);\r\n  },\r\n  add(record: Omit<SalaryHistory, 'id'>): SalaryHistory | Promise<SalaryHistory> {\r\n    if (USE_FS) return SalaryHistoryFS.add(record);\r\n    const all = (this.getAll() as SalaryHistory[]);\r\n    const newRec: SalaryHistory = { ...record, id: crypto.randomUUID() };\r\n    all.push(newRec); store.setItem(KEY, JSON.stringify(all)); return newRec;\r\n  }\r\n};\r\n","import { collection, addDoc, getDocs, serverTimestamp } from 'firebase/firestore';\r\nimport { firebaseDb } from '../../config/firebase';\r\nimport type { LeaveRecord } from '../../types/history';\r\n\r\nexport const LeaveFS = {\r\n  async getAll(): Promise<LeaveRecord[]> {\r\n    const snap = await getDocs(collection(firebaseDb, 'leave_records'));\r\n    return snap.docs.map(d => ({ id: d.id, ...(d.data() as any) })) as LeaveRecord[];\r\n  },\r\n  async getEmployeeLeaves(employeeId: string): Promise<LeaveRecord[]> {\r\n    const all = await this.getAll();\r\n    return all.filter(r => r.employeeId === employeeId);\r\n  },\r\n  async add(record: Omit<LeaveRecord, 'id'>): Promise<LeaveRecord> {\r\n    const docData = { ...record, createdAt: serverTimestamp() } as any;\r\n    const ref = await addDoc(collection(firebaseDb, 'leave_records'), docData);\r\n    return { ...record, id: ref.id } as LeaveRecord;\r\n  }\r\n};\r\n","import { LeaveRecord } from '../../types/history';\r\nimport { LeaveFS } from '../firestore/leaves';\r\nconst USE_FS = import.meta.env.VITE_DATA_BACKEND === 'firestore' && import.meta.env.MODE !== 'test';\r\n\r\nconst mem: Record<string, string> = {};\r\nconst store = {\r\n  getItem(k: string) { try { return (globalThis as any).localStorage?.getItem(k) ?? mem[k] ?? null; } catch { return mem[k] ?? null; } },\r\n  setItem(k: string, v: string) { try { (globalThis as any).localStorage?.setItem(k, v); } catch {} mem[k]=v; }\r\n};\r\n\r\nconst KEY = 'nipon_leave_records';\r\n\r\nexport const LeaveService = {\r\n  getAll(): LeaveRecord[] | Promise<LeaveRecord[]> { return USE_FS ? LeaveFS.getAll() : (store.getItem(KEY) ? JSON.parse(store.getItem(KEY) as string) : []); },\r\n  getEmployeeLeaves(employeeId: string): LeaveRecord[] | Promise<LeaveRecord[]> { return USE_FS ? LeaveFS.getEmployeeLeaves(employeeId) : (this.getAll() as LeaveRecord[]).filter(r => r.employeeId === employeeId); },\r\n  add(record: Omit<LeaveRecord, 'id'>): LeaveRecord | Promise<LeaveRecord> { return USE_FS ? LeaveFS.add(record) : (()=>{ const all = (this.getAll() as LeaveRecord[]); const rec: LeaveRecord = { ...record, id: crypto.randomUUID() }; all.push(rec); store.setItem(KEY, JSON.stringify(all)); return rec; })(); }\r\n};\r\n","import React from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { EmployeeService } from '../../services/api/employees';\r\nimport type { Employee } from '../../types/employee';\r\nimport type { SalaryHistory, LeaveRecord } from '../../types/history';\r\nimport { SalaryHistoryService } from '../../services/api/salaryHistory';\r\nimport { LeaveService } from '../../services/api/leaves';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '../../components/ui/card';\r\nimport { Button } from '../../components/ui/button';\r\nimport { Badge } from '../../components/ui/badge';\r\nimport { Dialog } from '../../components/ui/dialog';\r\nimport { Input } from '../../components/ui/input';\r\n\r\nexport const EmployeeDetailPage: React.FC = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [employee, setEmployee] = React.useState<Employee | null>(null);\r\n  const [salaryHistory, setSalaryHistory] = React.useState<SalaryHistory[]>([]);\r\n  const [leaveRecords, setLeaveRecords] = React.useState<LeaveRecord[]>([]);\r\n  const [showSalaryModal, setShowSalaryModal] = React.useState(false);\r\n  const [showLeaveModal, setShowLeaveModal] = React.useState(false);\r\n  const [showPaymentModal, setShowPaymentModal] = React.useState(false);\r\n  const [expanded, setExpanded] = React.useState({ personal: true, employment: true, salary: true, documents: true, leave: true });\r\n\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      if (!id) return;\r\n      const emp = await EmployeeService.getById(id);\r\n      if (!emp) { navigate('/employees'); return; }\r\n      setEmployee(emp);\r\n      const [hist, leaves] = await Promise.all([\r\n        Promise.resolve(SalaryHistoryService.getByEmployee(id) as any),\r\n        Promise.resolve(LeaveService.getEmployeeLeaves(id) as any)\r\n      ]);\r\n      setSalaryHistory(hist as SalaryHistory[]);\r\n      setLeaveRecords(leaves as LeaveRecord[]);\r\n    })();\r\n  }, [id, navigate]);\r\n\r\n  if (!employee) return <div className=\"p-4 text-sm\">Loading…</div>;\r\n\r\n  const initials = `${employee.personalInfo.firstName[0] || ''}${employee.personalInfo.lastName[0] || ''}`;\r\n  const fullName = `${employee.personalInfo.firstName} ${employee.personalInfo.lastName}`;\r\n\r\n  return (\r\n    <div className=\"max-w-6xl mx-auto p-6 space-y-6\">\r\n      <div className=\"bg-white rounded-lg shadow p-6\">\r\n        <div className=\"flex justify-between items-start\">\r\n          <div className=\"flex items-center space-x-4\">\r\n            <div className=\"w-16 h-16 bg-gradient-to-br from-[#8A1538] to-rose-400 rounded-full flex items-center justify-center text-white text-xl font-bold\">\r\n              {initials}\r\n            </div>\r\n            <div>\r\n              <h1 className=\"text-xl font-bold\">{fullName}</h1>\r\n              <p className=\"text-gray-500 text-sm\">{employee.employeeCode} • {employee.employeeType === 'Permanent' ? employee.employment.position : employee.contract.position}</p>\r\n              <div className=\"flex items-center gap-2 mt-2\">\r\n                <Badge variant={employee.status === 'Active' ? 'default' : employee.status === 'On Leave' ? 'secondary' : 'destructive'}>\r\n                  {employee.status}\r\n                </Badge>\r\n                <Badge variant={employee.employeeType === 'Permanent' ? 'default' : 'outline'}>\r\n                  {employee.employeeType}\r\n                </Badge>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex gap-2\">\r\n            <Button size=\"sm\" variant=\"outline\" onClick={() => setShowPaymentModal(true)}>Add Payment</Button>\r\n            <Button size=\"sm\" variant=\"outline\" onClick={() => setShowLeaveModal(true)}>Add Leave</Button>\r\n            <Button size=\"sm\" variant=\"outline\" onClick={() => setShowSalaryModal(true)}>Update Salary</Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Personal */}\r\n      <Card>\r\n        <CardHeader onClick={() => setExpanded(p => ({ ...p, personal: !p.personal }))} className=\"cursor-pointer\">\r\n          <div className=\"flex justify-between items-center\"><CardTitle>Personal Information</CardTitle><span>{expanded.personal ? '▲' : '▼'}</span></div>\r\n        </CardHeader>\r\n        {expanded.personal && (\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 text-sm\">\r\n              <div><div className=\"text-gray-500\">Nationality</div><div className=\"font-medium\">{employee.personalInfo.nationality}</div></div>\r\n              <div><div className=\"text-gray-500\">Date of Birth</div><div className=\"font-medium\">{employee.personalInfo.dateOfBirth}</div></div>\r\n              <div><div className=\"text-gray-500\">Gender</div><div className=\"font-medium\">{employee.personalInfo.gender}</div></div>\r\n              <div><div className=\"text-gray-500\">Marital Status</div><div className=\"font-medium\">{employee.personalInfo.maritalStatus}</div></div>\r\n              <div><div className=\"text-gray-500\">Mobile</div><div className=\"font-medium\">{employee.contact.mobileQatar}</div></div>\r\n              {employee.contact.email && <div><div className=\"text-gray-500\">Email</div><div className=\"font-medium\">{employee.contact.email}</div></div>}\r\n              <div className=\"md:col-span-2\"><div className=\"text-gray-500\">Address</div><div className=\"font-medium\">{employee.contact.address}</div></div>\r\n              <div className=\"md:col-span-2\"><div className=\"text-gray-500\">Emergency Contact</div><div className=\"font-medium\">{employee.contact.emergencyContact.name} ({employee.contact.emergencyContact.relationship}) - {employee.contact.emergencyContact.phone}</div></div>\r\n            </div>\r\n          </CardContent>\r\n        )}\r\n      </Card>\r\n\r\n      {/* Employment */}\r\n      <Card>\r\n        <CardHeader onClick={() => setExpanded(p => ({ ...p, employment: !p.employment }))} className=\"cursor-pointer\">\r\n          <div className=\"flex justify-between items-center\"><CardTitle>Employment Details</CardTitle><span>{expanded.employment ? '▲' : '▼'}</span></div>\r\n        </CardHeader>\r\n        {expanded.employment && (\r\n          <CardContent>\r\n            {employee.employeeType === 'Permanent' ? (\r\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 text-sm\">\r\n                <div><div className=\"text-gray-500\">Department</div><div className=\"font-medium\">{employee.employment.department}</div></div>\r\n                <div><div className=\"text-gray-500\">Position</div><div className=\"font-medium\">{employee.employment.position}</div></div>\r\n                <div><div className=\"text-gray-500\">Joining Date</div><div className=\"font-medium\">{employee.employment.joiningDate}</div></div>\r\n                <div><div className=\"text-gray-500\">Contract Type</div><div className=\"font-medium\">{employee.employment.contractType}</div></div>\r\n                {employee.employment.contractEndDate && <div><div className=\"text-gray-500\">Contract End</div><div className=\"font-medium\">{employee.employment.contractEndDate}</div></div>}\r\n                <div><div className=\"text-gray-500\">Work Location</div><div className=\"font-medium\">{employee.employment.workLocation}</div></div>\r\n                {employee.employment.reportingTo && <div><div className=\"text-gray-500\">Reporting To</div><div className=\"font-medium\">{employee.employment.reportingTo}</div></div>}\r\n              </div>\r\n            ) : (\r\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 text-sm\">\r\n                <div><div className=\"text-gray-500\">Client</div><div className=\"font-medium\">{employee.contract.client}</div></div>\r\n                <div><div className=\"text-gray-500\">Position</div><div className=\"font-medium\">{employee.contract.position}</div></div>\r\n                <div><div className=\"text-gray-500\">Start Date</div><div className=\"font-medium\">{employee.contract.startDate}</div></div>\r\n                <div><div className=\"text-gray-500\">End Date</div><div className=\"font-medium\">{employee.contract.endDate}</div></div>\r\n                <div><div className=\"text-gray-500\">Location</div><div className=\"font-medium\">{employee.contract.clientLocation}</div></div>\r\n                <div><div className=\"text-gray-500\">Work Type</div><div className=\"font-medium\">{employee.contract.workType}</div></div>\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        )}\r\n      </Card>\r\n\r\n      {/* Salary and Payment History */}\r\n      <Card>\r\n        <CardHeader onClick={() => setExpanded(p => ({ ...p, salary: !p.salary }))} className=\"cursor-pointer\">\r\n          <div className=\"flex justify-between items-center\"><CardTitle>Salary & Payments</CardTitle><span>{expanded.salary ? '▲' : '▼'}</span></div>\r\n        </CardHeader>\r\n        {expanded.salary && (\r\n          <CardContent>\r\n            <div className=\"bg-gray-50 p-4 rounded-lg mb-4 text-sm\">\r\n              {employee.employeeType === 'Permanent' ? (\r\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n                  <div><div className=\"text-gray-500\">Basic</div><div className=\"font-semibold\">{employee.compensation.basicSalary}</div></div>\r\n                  <div><div className=\"text-gray-500\">Housing</div><div className=\"font-semibold\">{employee.compensation.housingAllowance}</div></div>\r\n                  <div><div className=\"text-gray-500\">Transport</div><div className=\"font-semibold\">{employee.compensation.transportAllowance}</div></div>\r\n                  <div><div className=\"text-gray-500\">Total</div><div className=\"font-bold text-green-600\">{employee.compensation.totalMonthlySalary}</div></div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n                  <div><div className=\"text-gray-500\">Rate Type</div><div className=\"font-semibold\">{employee.compensation.rateType}</div></div>\r\n                  <div><div className=\"text-gray-500\">Rate</div><div className=\"font-semibold\">{employee.compensation.rate}</div></div>\r\n                  <div><div className=\"text-gray-500\">OT Rate</div><div className=\"font-semibold\">{employee.compensation.overtimeRate || 0}</div></div>\r\n                  <div><div className=\"text-gray-500\">Earnings (to date)</div><div className=\"font-bold text-green-600\">{employee.compensation.totalEarnings || 0}</div></div>\r\n                </div>\r\n              )}\r\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mt-4 pt-4 border-t\">\r\n                <div><div className=\"text-gray-500\">Payment Method</div><div className=\"font-medium\">Bank Transfer</div></div>\r\n                {employee.employeeType === 'Permanent' && (\r\n                  <>\r\n                    <div><div className=\"text-gray-500\">Bank</div><div className=\"font-medium\">{employee.compensation.bankName}</div></div>\r\n                    <div><div className=\"text-gray-500\">Account</div><div className=\"font-medium\">{employee.compensation.accountNumber}</div></div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <h4 className=\"font-semibold mb-2\">Payment History</h4>\r\n              {salaryHistory.length === 0 ? (\r\n                <div className=\"text-xs text-gray-500 border rounded p-3\">No payment history yet.</div>\r\n              ) : (\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"w-full text-sm\">\r\n                    <thead>\r\n                      <tr className=\"border-b bg-gray-50\">\r\n                        <th className=\"text-left py-2 px-2\">Month</th>\r\n                        <th className=\"text-right py-2 px-2\">Days</th>\r\n                        <th className=\"text-right py-2 px-2\">Basic</th>\r\n                        <th className=\"text-right py-2 px-2\">Allowances</th>\r\n                        <th className=\"text-right py-2 px-2\">Overtime</th>\r\n                        <th className=\"text-right py-2 px-2\">Deductions</th>\r\n                        <th className=\"text-right py-2 px-2\">Net</th>\r\n                        <th className=\"text-left py-2 px-2\">Payment Date</th>\r\n                        <th className=\"text-left py-2 px-2\">Status</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {salaryHistory.map(rec => (\r\n                        <tr key={rec.id} className=\"border-b hover:bg-gray-50\">\r\n                          <td className=\"py-2 px-2\">{new Date(rec.year, rec.month - 1).toLocaleDateString('en-US', { month: 'short', year: 'numeric' })}</td>\r\n                          <td className=\"py-2 px-2 text-right\">{rec.daysWorked}</td>\r\n                          <td className=\"py-2 px-2 text-right\">{rec.basic}</td>\r\n                          <td className=\"py-2 px-2 text-right\">{rec.allowances}</td>\r\n                          <td className=\"py-2 px-2 text-right\">{rec.overtime}</td>\r\n                          <td className=\"py-2 px-2 text-right text-red-600\">{rec.deductions > 0 ? `- ${rec.deductions}` : 0}</td>\r\n                          <td className=\"py-2 px-2 text-right font-semibold\">{rec.netSalary}</td>\r\n                          <td className=\"py-2 px-2\">{rec.paymentDate}</td>\r\n                          <td className=\"py-2 px-2\"><Badge variant={rec.status === 'Paid' ? 'default' : rec.status === 'Hold' ? 'secondary' : 'outline'}>{rec.status}</Badge></td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </CardContent>\r\n        )}\r\n      </Card>\r\n\r\n      {/* Documents */}\r\n      <Card>\r\n        <CardHeader onClick={() => setExpanded(p => ({ ...p, documents: !p.documents }))} className=\"cursor-pointer\">\r\n          <div className=\"flex justify-between items-center\"><CardTitle>Documents</CardTitle><span>{expanded.documents ? '▲' : '▼'}</span></div>\r\n        </CardHeader>\r\n        {expanded.documents && (\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\r\n              {employee.employeeType === 'Permanent' ? (\r\n                <>\r\n                  <div className=\"border rounded p-3\"><div className=\"font-semibold\">Qatar ID</div><div>{employee.documents.qatarId.number}</div><div className=\"text-xs text-gray-500\">Expires: {employee.documents.qatarId.expiryDate}</div></div>\r\n                  <div className=\"border rounded p-3\"><div className=\"font-semibold\">Passport</div><div>{employee.documents.passport.number}</div><div className=\"text-xs text-gray-500\">Expires: {employee.documents.passport.expiryDate}</div></div>\r\n                  <div className=\"border rounded p-3\"><div className=\"font-semibold\">Visa</div><div>{employee.documents.visa.number}</div><div className=\"text-xs text-gray-500\">Expires: {employee.documents.visa.expiryDate}</div></div>\r\n                  <div className=\"border rounded p-3\"><div className=\"font-semibold\">Health Card</div><div>{employee.documents.healthCard.number}</div><div className=\"text-xs text-gray-500\">Expires: {employee.documents.healthCard.expiryDate}</div></div>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {employee.documents.qatarId && <div className=\"border rounded p-3\"><div className=\"font-semibold\">Qatar ID</div><div>{employee.documents.qatarId.number}</div><div className=\"text-xs text-gray-500\">Expires: {employee.documents.qatarId.expiryDate}</div></div>}\r\n                  <div className=\"border rounded p-3\"><div className=\"font-semibold\">Passport</div><div>{employee.documents.passport.number}</div><div className=\"text-xs text-gray-500\">Expires: {employee.documents.passport.expiryDate}</div></div>\r\n                  {employee.documents.visa && <div className=\"border rounded p-3\"><div className=\"font-semibold\">Visa</div><div>{employee.documents.visa.number}</div><div className=\"text-xs text-gray-500\">Expires: {employee.documents.visa.expiryDate}</div></div>}\r\n                  {employee.documents.workPermit && <div className=\"border rounded p-3\"><div className=\"font-semibold\">Work Permit</div><div>{employee.documents.workPermit.number}</div><div className=\"text-xs text-gray-500\">Expires: {employee.documents.workPermit.expiryDate}</div></div>}\r\n                </>\r\n              )}\r\n            </div>\r\n          </CardContent>\r\n        )}\r\n      </Card>\r\n\r\n      {/* Leave */}\r\n      <Card>\r\n        <CardHeader onClick={() => setExpanded(p => ({ ...p, leave: !p.leave }))} className=\"cursor-pointer\">\r\n          <div className=\"flex justify-between items-center\"><CardTitle>Leave Management</CardTitle><span>{expanded.leave ? '▲' : '▼'}</span></div>\r\n        </CardHeader>\r\n        {expanded.leave && (\r\n          <CardContent>\r\n            <div className=\"space-y-3\">\r\n              {employee.employeeType === 'Permanent' && (\r\n                <div className=\"grid grid-cols-4 gap-4 text-center text-sm\">\r\n                  <div className=\"p-3 rounded bg-blue-50\"><div className=\"text-2xl font-bold text-blue-700\">{employee.leave.annualLeaveEntitlement}</div><div className=\"text-gray-600\">Annual</div></div>\r\n                  <div className=\"p-3 rounded bg-green-50\"><div className=\"text-2xl font-bold text-green-700\">{employee.leave.sickLeaveBalance}</div><div className=\"text-gray-600\">Sick</div></div>\r\n                  <div className=\"p-3 rounded bg-orange-50\"><div className=\"text-2xl font-bold text-orange-700\">{employee.leave.annualLeaveTaken}</div><div className=\"text-gray-600\">Taken</div></div>\r\n                  <div className=\"p-3 rounded bg-purple-50\"><div className=\"text-2xl font-bold text-purple-700\">{employee.leave.annualLeaveBalance}</div><div className=\"text-gray-600\">Balance</div></div>\r\n                </div>\r\n              )}\r\n              <div>\r\n                <h4 className=\"font-semibold mb-2\">Leave History</h4>\r\n                {leaveRecords.length === 0 ? (\r\n                  <div className=\"text-xs text-gray-500 border rounded p-3\">No leave history yet.</div>\r\n                ) : (\r\n                  <div className=\"space-y-2\">\r\n                    {leaveRecords.map(l => (\r\n                      <div key={l.id} className=\"flex justify-between items-center p-3 border rounded\">\r\n                        <div>\r\n                          <div className=\"font-medium text-sm\">{l.type} Leave</div>\r\n                          <div className=\"text-xs text-gray-500\">{l.startDate} to {l.endDate} ({l.days} days)</div>\r\n                        </div>\r\n                        <Badge variant={l.status === 'Approved' ? 'default' : l.status === 'Rejected' ? 'destructive' : 'secondary'}>{l.status}</Badge>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        )}\r\n      </Card>\r\n\r\n      {/* Payment Modal */}\r\n      <Dialog open={showPaymentModal} onClose={() => setShowPaymentModal(false)} title=\"Add Payment\" size=\"md\">\r\n        <div className=\"space-y-3\">\r\n          <div>\r\n            <div className=\"text-xs font-medium mb-1\">Payment Date</div>\r\n            <Input type=\"date\" />\r\n          </div>\r\n          <div>\r\n            <div className=\"text-xs font-medium mb-1\">Amount</div>\r\n            <Input type=\"number\" placeholder=\"Enter amount\" />\r\n          </div>\r\n          <div>\r\n            <div className=\"text-xs font-medium mb-1\">Payment Method</div>\r\n            <select className=\"w-full border rounded px-2 py-2 text-sm\">\r\n              <option>Bank Transfer</option>\r\n              <option>Cash</option>\r\n              <option>Cheque</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <div className=\"text-xs font-medium mb-1\">Reference</div>\r\n            <Input placeholder=\"Transaction reference\" />\r\n          </div>\r\n          <div className=\"flex justify-end gap-2 pt-2\">\r\n            <Button variant=\"outline\" onClick={() => setShowPaymentModal(false)}>Cancel</Button>\r\n            <Button onClick={() => setShowPaymentModal(false)}>Save Payment</Button>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n\r\n      {/* Leave Modal */}\r\n      <Dialog open={showLeaveModal} onClose={() => setShowLeaveModal(false)} title=\"Add Leave\" size=\"md\">\r\n        <div className=\"space-y-3\">\r\n          <div>\r\n            <div className=\"text-xs font-medium mb-1\">Leave Type</div>\r\n            <select className=\"w-full border rounded px-2 py-2 text-sm\">\r\n              <option>Annual</option>\r\n              <option>Sick</option>\r\n              <option>Emergency</option>\r\n              <option>Unpaid</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"grid grid-cols-2 gap-3\">\r\n            <div>\r\n              <div className=\"text-xs font-medium mb-1\">Start Date</div>\r\n              <Input type=\"date\" />\r\n            </div>\r\n            <div>\r\n              <div className=\"text-xs font-medium mb-1\">End Date</div>\r\n              <Input type=\"date\" />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"text-xs font-medium mb-1\">Reason</div>\r\n            <textarea className=\"w-full border rounded px-2 py-2 text-sm\" rows={3} />\r\n          </div>\r\n          <div className=\"flex justify-end gap-2 pt-2\">\r\n            <Button variant=\"outline\" onClick={() => setShowLeaveModal(false)}>Cancel</Button>\r\n            <Button onClick={() => setShowLeaveModal(false)}>Submit Leave</Button>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n\r\n      {/* Salary Modal */}\r\n      <Dialog open={showSalaryModal} onClose={() => setShowSalaryModal(false)} title=\"Update Salary\" size=\"md\">\r\n        <div className=\"space-y-3\">\r\n          {employee.employeeType === 'Permanent' ? (\r\n            <>\r\n              <div><div className=\"text-xs font-medium mb-1\">Basic</div><Input type=\"number\" defaultValue={(employee as any).compensation.basicSalary} /></div>\r\n              <div><div className=\"text-xs font-medium mb-1\">Housing</div><Input type=\"number\" defaultValue={(employee as any).compensation.housingAllowance} /></div>\r\n              <div><div className=\"text-xs font-medium mb-1\">Transport</div><Input type=\"number\" defaultValue={(employee as any).compensation.transportAllowance} /></div>\r\n              <div><div className=\"text-xs font-medium mb-1\">Other</div><Input type=\"number\" defaultValue={(employee as any).compensation.otherAllowances || 0} /></div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div><div className=\"text-xs font-medium mb-1\">Rate Type</div><select className=\"w-full border rounded px-2 py-2 text-sm\" defaultValue={(employee as any).compensation.rateType}><option>Daily</option><option>Hourly</option><option>Monthly</option></select></div>\r\n              <div><div className=\"text-xs font-medium mb-1\">Rate</div><Input type=\"number\" defaultValue={(employee as any).compensation.rate} /></div>\r\n              <div><div className=\"text-xs font-medium mb-1\">OT Rate</div><Input type=\"number\" defaultValue={(employee as any).compensation.overtimeRate || 0} /></div>\r\n            </>\r\n          )}\r\n          <div className=\"flex justify-end gap-2 pt-2\">\r\n            <Button variant=\"outline\" onClick={() => setShowSalaryModal(false)}>Cancel</Button>\r\n            <Button onClick={() => setShowSalaryModal(false)}>Update</Button>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeDetailPage;\r\n"],"names":["SalaryHistoryFS","getDocs","collection","firebaseDb","d","employeeId","h","record","docData","serverTimestamp","ref","addDoc","SalaryHistoryService","LeaveFS","r","LeaveService","EmployeeDetailPage","id","useParams","navigate","useNavigate","employee","setEmployee","React","salaryHistory","setSalaryHistory","leaveRecords","setLeaveRecords","showSalaryModal","setShowSalaryModal","showLeaveModal","setShowLeaveModal","showPaymentModal","setShowPaymentModal","expanded","setExpanded","emp","EmployeeService","hist","leaves","initials","fullName","jsxs","jsx","Badge","Button","Card","CardHeader","p","CardTitle","CardContent","Fragment","rec","l","Dialog","Input"],"mappings":"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"}